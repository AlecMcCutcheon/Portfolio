{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nconst GlassDebugSample = () => {\n  _s();\n  const [mouse, setMouse] = useState({\n    x: 0,\n    y: 0\n  });\n  const [color, setColor] = useState('rgb(255,255,255)');\n  const mouseRef = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    function handleMove(e) {\n      setMouse({\n        x: e.clientX,\n        y: e.clientY\n      });\n      mouseRef.current = {\n        x: e.clientX,\n        y: e.clientY\n      };\n    }\n    window.addEventListener('mousemove', handleMove);\n    return () => window.removeEventListener('mousemove', handleMove);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const getColor = window.__getBackgroundColorAt;\n      if (getColor) {\n        setColor(getColor(mouseRef.current.x, mouseRef.current.y));\n      }\n    }, 60);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Commented out debug sample dot rendering\n  /*\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        left: mouse.x + 24,\r\n        top: mouse.y + 24,\r\n        zIndex: 99999,\r\n        pointerEvents: 'none',\r\n        background: 'rgba(30,41,59,0.8)',\r\n        color: '#fff',\r\n        borderRadius: 8,\r\n        padding: '8px 12px',\r\n        fontSize: 14,\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.18)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: 8,\r\n        minWidth: 120,\r\n      }}\r\n    >\r\n      <span\r\n        style={{\r\n          display: 'inline-block',\r\n          width: 28,\r\n          height: 28,\r\n          borderRadius: 6,\r\n          background: color,\r\n          border: '1px solid #fff',\r\n        }}\r\n      />\r\n      <span>{color}</span>\r\n    </div>\r\n  );\r\n  */\n  return null;\n};\n_s(GlassDebugSample, \"n92rkKPjXkUjH7q0i/xWhnf2fPA=\");\n_c = GlassDebugSample;\nexport default GlassDebugSample;\nvar _c;\n$RefreshReg$(_c, \"GlassDebugSample\");","map":{"version":3,"names":["useEffect","useRef","useState","GlassDebugSample","_s","mouse","setMouse","x","y","color","setColor","mouseRef","handleMove","e","clientX","clientY","current","window","addEventListener","removeEventListener","interval","setInterval","getColor","__getBackgroundColorAt","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Portfolio/src/components/GlassDebugSample.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst GlassDebugSample: React.FC = () => {\r\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\r\n  const [color, setColor] = useState('rgb(255,255,255)');\r\n  const mouseRef = useRef({ x: 0, y: 0 });\r\n\r\n  useEffect(() => {\r\n    function handleMove(e: MouseEvent) {\r\n      setMouse({ x: e.clientX, y: e.clientY });\r\n      mouseRef.current = { x: e.clientX, y: e.clientY };\r\n    }\r\n    window.addEventListener('mousemove', handleMove);\r\n    return () => window.removeEventListener('mousemove', handleMove);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const getColor = (window as any).__getBackgroundColorAt;\r\n      if (getColor) {\r\n        setColor(getColor(mouseRef.current.x, mouseRef.current.y));\r\n      }\r\n    }, 60);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Commented out debug sample dot rendering\r\n  /*\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        left: mouse.x + 24,\r\n        top: mouse.y + 24,\r\n        zIndex: 99999,\r\n        pointerEvents: 'none',\r\n        background: 'rgba(30,41,59,0.8)',\r\n        color: '#fff',\r\n        borderRadius: 8,\r\n        padding: '8px 12px',\r\n        fontSize: 14,\r\n        boxShadow: '0 2px 8px rgba(0,0,0,0.18)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: 8,\r\n        minWidth: 120,\r\n      }}\r\n    >\r\n      <span\r\n        style={{\r\n          display: 'inline-block',\r\n          width: 28,\r\n          height: 28,\r\n          borderRadius: 6,\r\n          background: color,\r\n          border: '1px solid #fff',\r\n        }}\r\n      />\r\n      <span>{color}</span>\r\n    </div>\r\n  );\r\n  */\r\n  return null;\r\n};\r\n\r\nexport default GlassDebugSample; "],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC;IAAEK,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,kBAAkB,CAAC;EACtD,MAAMS,QAAQ,GAAGV,MAAM,CAAC;IAAEM,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAEvCR,SAAS,CAAC,MAAM;IACd,SAASY,UAAUA,CAACC,CAAa,EAAE;MACjCP,QAAQ,CAAC;QAAEC,CAAC,EAAEM,CAAC,CAACC,OAAO;QAAEN,CAAC,EAAEK,CAAC,CAACE;MAAQ,CAAC,CAAC;MACxCJ,QAAQ,CAACK,OAAO,GAAG;QAAET,CAAC,EAAEM,CAAC,CAACC,OAAO;QAAEN,CAAC,EAAEK,CAAC,CAACE;MAAQ,CAAC;IACnD;IACAE,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAEN,UAAU,CAAC;IAChD,OAAO,MAAMK,MAAM,CAACE,mBAAmB,CAAC,WAAW,EAAEP,UAAU,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,QAAQ,GAAIL,MAAM,CAASM,sBAAsB;MACvD,IAAID,QAAQ,EAAE;QACZZ,QAAQ,CAACY,QAAQ,CAACX,QAAQ,CAACK,OAAO,CAACT,CAAC,EAAEI,QAAQ,CAACK,OAAO,CAACR,CAAC,CAAC,CAAC;MAC5D;IACF,CAAC,EAAE,EAAE,CAAC;IACN,OAAO,MAAMgB,aAAa,CAACJ,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAO,IAAI;AACb,CAAC;AAAChB,EAAA,CA7DID,gBAA0B;AAAAsB,EAAA,GAA1BtB,gBAA0B;AA+DhC,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}