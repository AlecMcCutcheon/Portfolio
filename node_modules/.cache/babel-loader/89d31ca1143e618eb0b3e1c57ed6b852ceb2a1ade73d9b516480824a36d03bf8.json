{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Portfolio\\\\src\\\\ui\\\\background-gradient-animation.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState, createContext } from \"react\";\nimport { cn } from \"../lib/utils\";\n\n// Context for background color sampling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BackgroundColorContext = /*#__PURE__*/createContext(undefined);\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const containerRectRef = useRef(null);\n  // Update rect on mount and resize\n  useEffect(() => {\n    function updateRect() {\n      if (containerRef.current) {\n        containerRectRef.current = containerRef.current.getBoundingClientRect();\n      }\n    }\n    updateRect();\n    window.addEventListener('resize', updateRect);\n    return () => window.removeEventListener('resize', updateRect);\n  }, []);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dynamicPointerColor, setDynamicPointerColor] = useState(pointerColor);\n  const [targetPointerColor, setTargetPointerColor] = useState(pointerColor);\n  const animationFrameRef = useRef(null);\n\n  // Multiple animated blobs for the mouse gradient\n  // Single pointer-following blob\n  const POINTER_BLOB_RADIUS = 48; // px\n  const POINTER_BLOB_SIZE = 0.08; // 8% of container width\n  const [pointerBlob, setPointerBlob] = useState({\n    x: 0,\n    y: 0,\n    color: pointerColor,\n    size: POINTER_BLOB_SIZE,\n    radius: POINTER_BLOB_RADIUS\n  });\n\n  // Swarm center inertia state\n  // No swarm/orbit logic needed for single blob\n\n  // Use refs to always access latest blobs and swarm\n  const pointerBlobRef = useRef(pointerBlob);\n  useEffect(() => {\n    pointerBlobRef.current = pointerBlob;\n  }, [pointerBlob]);\n\n  // Function to calculate color distance (RGB Euclidean distance)\n  const colorDistance = (color1, color2) => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    return Math.sqrt(Math.pow(rgb1[0] - rgb2[0], 2) + Math.pow(rgb1[1] - rgb2[1], 2) + Math.pow(rgb1[2] - rgb2[2], 2));\n  };\n\n  // Function to blend colors based on RGB values\n  const blendColors = (color1, color2, weight) => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    const blended = rgb1.map((c1, i) => Math.round(c1 * (1 - weight) + rgb2[i] * weight));\n    return blended.join(', ');\n  };\n\n  // Function to get smooth contrasting color based on mouse position\n  const selectContrastingColor = (mouseX, mouseY) => {\n    const colors = isDarkMode ? [\"37, 99, 235\",\n    // first\n    \"126, 34, 206\",\n    // second\n    \"6, 182, 212\",\n    // third\n    \"190, 24, 93\",\n    // fourth\n    \"21, 128, 61\" // fifth\n    ] : [firstColor, secondColor, thirdColor, fourthColor, fifthColor];\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n\n    // Normalize mouse position to 0-1 range\n    const normalizedX = mouseX / containerWidth;\n    const normalizedY = mouseY / containerHeight;\n\n    // Define gradient regions with their positions and colors\n    const regions = [{\n      x: 0.2,\n      y: 0.1,\n      color: colors[0]\n    },\n    // Top-left\n    {\n      x: 0.8,\n      y: 0.1,\n      color: colors[1]\n    },\n    // Top-right\n    {\n      x: 0.5,\n      y: 0.5,\n      color: colors[2]\n    },\n    // Center\n    {\n      x: 0.2,\n      y: 0.8,\n      color: colors[3]\n    },\n    // Bottom-left\n    {\n      x: 0.8,\n      y: 0.8,\n      color: colors[4]\n    } // Bottom-right\n    ];\n\n    // Find the closest region to determine the base contrasting color\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    regions.forEach(region => {\n      const distance = Math.sqrt(Math.pow(normalizedX - region.x, 2) + Math.pow(normalizedY - region.y, 2));\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n\n    // Find the most contrasting color to the closest region\n    let mostContrastingColor = colors[0];\n    let maxContrast = 0;\n    colors.forEach(color => {\n      const contrast = colorDistance(closestRegion.color, color);\n      if (contrast > maxContrast) {\n        maxContrast = contrast;\n        mostContrastingColor = color;\n      }\n    });\n\n    // Calculate smooth transition based on distance from closest region\n    // Use a much larger influence radius for smoother, longer transitions\n    const influenceRadius = 8.0; // 800% of screen size (very large/global reach)\n    const distanceFromClosest = Math.sqrt(Math.pow(normalizedX - closestRegion.x, 2) + Math.pow(normalizedY - closestRegion.y, 2));\n\n    // Create smooth falloff - closer to region = stronger contrasting effect\n    const influenceStrength = Math.max(0, 1 - distanceFromClosest / influenceRadius);\n\n    // Use a softer curve for the transition\n    const smoothInfluence = Math.pow(influenceStrength, 1.1);\n\n    // Blend between neutral color and contrasting color based on influence\n    const neutralColor = isDarkMode ? \"37, 99, 235\" : firstColor;\n    return blendColors(neutralColor, mostContrastingColor, smoothInfluence * 0.7);\n  };\n\n  // For debug: store the last sampled coordinate\n  let lastSampledCoord = null;\n  // Function to get the background color at a given (x, y) coordinate (in px, relative to window)\n  // This is a simplified version: returns the closest region's color (could be improved for gradients)\n  const [debugSample, setDebugSample] = useState(null);\n  const getBackgroundColorAt = (x, y) => {\n    var _containerRef$current;\n    // For debug: store the last sampled coordinate\n    lastSampledCoord = {\n      x,\n      y\n    };\n    setDebugSample({\n      x,\n      y\n    });\n    const rect = (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : _containerRef$current.getBoundingClientRect();\n    if (!rect) return 'rgb(255,255,255)';\n    // Clamp x/y to container bounds (same as blob rendering)\n    let clampedX = x;\n    let clampedY = y;\n    if (clampedX < rect.left) clampedX = rect.left;\n    if (clampedX > rect.right) clampedX = rect.right;\n    if (clampedY < rect.top) clampedY = rect.top;\n    if (clampedY > rect.bottom) clampedY = rect.bottom;\n    const normalizedX = (clampedX - rect.left) / rect.width;\n    const normalizedY = (clampedY - rect.top) / rect.height;\n    // Linear gradient color (top to bottom)\n    const parseRGB = str => {\n      const match = str.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n      if (!match) return [255, 255, 255];\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    };\n    const lerp = (a, b, t) => a + (b - a) * t;\n    const lerpColor = (c1, c2, t) => [Math.round(lerp(c1[0], c2[0], t)), Math.round(lerp(c1[1], c2[1], t)), Math.round(lerp(c1[2], c2[2], t))];\n    const gradStart = parseRGB(isDarkMode ? \"rgb(15, 23, 42)\" : gradientBackgroundStart);\n    const gradEnd = parseRGB(isDarkMode ? \"rgb(2, 6, 23)\" : gradientBackgroundEnd);\n    const gradColor = lerpColor(gradStart, gradEnd, normalizedY);\n    // Use animated background blobs from window.__backgroundBlobs if available\n    const animatedBlobs = window.__backgroundBlobs;\n    let totalWeight = 0;\n    let blended = [0, 0, 0];\n    const container = containerRef.current;\n    if (!container) return `rgb(${gradColor[0]},${gradColor[1]},${gradColor[2]})`;\n    const width = container.offsetWidth;\n    const height = container.offsetHeight;\n    const sampleX = normalizedX * width;\n    const sampleY = normalizedY * height;\n    // Debug: log animated blob positions and sample info\n    if (animatedBlobs && Array.isArray(animatedBlobs)) {\n      // # OLD CODE - KEEP UNTIL CONFIRMED WORKING\n      // console.log('[getBackgroundColorAt] sample', {\n      //   sampleX, sampleY, animatedBlobs: animatedBlobs.map(b => ({ x: b.x, y: b.y, radius: b.radius, color: b.color }))\n      // });\n      // # NEW CODE - TESTING: plain text log\n      // console.log(`getBackgroundColorAt: sample (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)})`);\n    }\n    if (animatedBlobs && Array.isArray(animatedBlobs) && animatedBlobs.length > 0) {\n      // # OLD CODE - KEEP UNTIL CONFIRMED WORKING\n      // if (totalWeight > 0) {\n      //   blended = blended.map(c => Math.round(c / totalWeight)) as [number, number, number];\n      //   const colorString = `rgb(${blended[0]},${blended[1]},${blended[2]})`;\n      //   // # NEW CODE - TESTING: plain text log for result\n      //   // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${colorString}`);\n      //   return colorString;\n      // }\n      // # NEW CODE - TESTING: only inner 50% of radius contributes\n      let sum = [0, 0, 0];\n      let totalWeight = 0;\n      animatedBlobs.forEach((blob, i) => {\n        // Apply a larger offset to the effective radius for sampling\n        const baseRadius = blob.radius * 0.5; // Only inner half\n        const effectiveRadius = Math.max(8, baseRadius - 20); // Subtract 20px, clamp to minimum 8px\n        const dist = Math.sqrt(Math.pow(sampleX - blob.x, 2) + Math.pow(sampleY - blob.y, 2));\n        if (dist <= effectiveRadius) {\n          const t = dist / effectiveRadius;\n          const w = 1 - t * t; // smoothstep falloff\n          const blobColor = blob.color.startsWith('#') ? hexToRgb(blob.color) : blob.color.split(',').map(Number);\n          const blended = [gradColor[0] * (1 - w) + blobColor[0] * w, gradColor[1] * (1 - w) + blobColor[1] * w, gradColor[2] * (1 - w) + blobColor[2] * w];\n          // console.log(`Blob ${i}: dist=${dist.toFixed(1)}, effRadius=${effectiveRadius.toFixed(1)}, t=${t.toFixed(2)}, w=${w.toFixed(2)}, blobColor=[${blobColor}], blended=[${blended.map(x=>x.toFixed(1))}]`);\n          sum[0] += blended[0] * w;\n          sum[1] += blended[1] * w;\n          sum[2] += blended[2] * w;\n          totalWeight += w;\n        } else {\n          // console.log(`Blob ${i}: dist=${dist.toFixed(1)}, effRadius=${effectiveRadius.toFixed(1)} (out of range)`);\n        }\n      });\n      if (totalWeight > 0) {\n        const avg = sum.map(c => Math.round(c / totalWeight));\n        const colorString = `rgb(${avg[0]},${avg[1]},${avg[2]})`;\n        // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${colorString} (CSS-matched blend)`);\n        return colorString;\n      }\n      // # NEW CODE - TESTING: fallback to background color if not enough blob influence\n      const bgColorString = `rgb(${gradColor[0]},${gradColor[1]},${gradColor[2]})`;\n      // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${bgColorString} (background)`);\n      return bgColorString;\n      // # OLD CODE - KEEP UNTIL CONFIRMED WORKING\n      // if (totalWeight > 0) {\n      //   blended = blended.map(c => Math.round(c / totalWeight)) as [number, number, number];\n      //   const colorString = `rgb(${blended[0]},${blended[1]},${blended[2]})`;\n      //   // # NEW CODE - TESTING: plain text log for result\n      //   // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${colorString}`);\n      //   return colorString;\n      // }\n    }\n    // Fallback to gradient color\n    return `rgb(${gradColor[0]},${gradColor[1]},${gradColor[2]})`;\n    // Helper to convert hex color to rgb array\n    function hexToRgb(hex) {\n      const h = hex.replace('#', '');\n      return [parseInt(h.substring(0, 2), 16), parseInt(h.substring(2, 4), 16), parseInt(h.substring(4, 6), 16)];\n    }\n  };\n\n  // Detect dark mode\n  useEffect(() => {\n    const checkDarkMode = () => {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    };\n    checkDarkMode();\n    const observer = new MutationObserver(checkDarkMode);\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class']\n    });\n    return () => observer.disconnect();\n  }, []);\n\n  // Set colors based on theme\n  useEffect(() => {\n    const colors = isDarkMode ? {\n      bgStart: \"rgb(15, 23, 42)\",\n      bgEnd: \"rgb(2, 6, 23)\",\n      first: \"37, 99, 235\",\n      second: \"126, 34, 206\",\n      third: \"6, 182, 212\",\n      fourth: \"190, 24, 93\",\n      fifth: \"21, 128, 61\",\n      pointer: \"37, 99, 235\"\n    } : {\n      bgStart: gradientBackgroundStart,\n      bgEnd: gradientBackgroundEnd,\n      first: firstColor,\n      second: secondColor,\n      third: thirdColor,\n      fourth: fourthColor,\n      fifth: fifthColor,\n      pointer: pointerColor\n    };\n    document.body.style.setProperty(\"--gradient-background-start\", colors.bgStart);\n    document.body.style.setProperty(\"--gradient-background-end\", colors.bgEnd);\n    document.body.style.setProperty(\"--first-color\", colors.first);\n    document.body.style.setProperty(\"--second-color\", colors.second);\n    document.body.style.setProperty(\"--third-color\", colors.third);\n    document.body.style.setProperty(\"--fourth-color\", colors.fourth);\n    document.body.style.setProperty(\"--fifth-color\", colors.fifth);\n    document.body.style.setProperty(\"--pointer-color\", colors.pointer);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, [isDarkMode, gradientBackgroundStart, gradientBackgroundEnd, firstColor, secondColor, thirdColor, fourthColor, fifthColor, pointerColor, size, blendingValue]);\n\n  // Animation loop for smooth mouse tracking (fixes infinite loop)\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setCurX(prev => prev + (tgX - prev) / 20);\n      setCurY(prev => prev + (tgY - prev) / 20);\n      if (running) requestAnimationFrame(animate);\n    }\n    animate();\n    return () => {\n      running = false;\n    };\n  }, [tgX, tgY]);\n\n  // Helper: parse rgb string to array\n  const parseRGB = color => {\n    return color.split(',').map(c => parseInt(c.trim(), 10));\n  };\n  // Helper: rgb array to string\n  const rgbToString = rgb => `${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n  // Helper: lerp between two rgb arrays\n  const lerpColors = (from, to, t) => {\n    return [Math.round(from[0] + (to[0] - from[0]) * t), Math.round(from[1] + (to[1] - from[1]) * t), Math.round(from[2] + (to[2] - from[2]) * t)];\n  };\n\n  // Animation loop for smooth color interpolation\n  // Animate pointer blob to follow the mouse\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setPointerBlob(prev => ({\n        ...prev,\n        x: tgX,\n        y: tgY,\n        color: selectContrastingColor(tgX, tgY)\n      }));\n      if (running) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    }\n    animationFrameRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n    };\n  }, [tgX, tgY]);\n\n  // Global mousemove handler for robust tracking\n  useEffect(() => {\n    function handleMouseMove(event) {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const relativeX = event.clientX - rect.left;\n      const relativeY = event.clientY - rect.top;\n      setTgX(relativeX);\n      setTgY(relativeY);\n      // Update debug sample color on mouse move\n      setDebugSample({\n        x: event.clientX,\n        y: event.clientY\n      });\n      // Update target color only\n      const contrastingColor = selectContrastingColor(relativeX, relativeY);\n      setTargetPointerColor(contrastingColor);\n    }\n    if (interactive) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [interactive]);\n\n  // Register global background color sampling function\n  useEffect(() => {\n    window.__getBackgroundColorAt = getBackgroundColorAt;\n    return () => {\n      if (window.__getBackgroundColorAt === getBackgroundColorAt) {\n        delete window.__getBackgroundColorAt;\n      }\n    };\n  });\n\n  // Expose live positions of CSS-animated background blobs for color sampling\n  useEffect(() => {\n    function updateLiveBlobPositions() {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      // Query all background blob elements by a class or data attribute\n      const blobNodes = containerRef.current.querySelectorAll('.background-blob');\n      const blobs = Array.from(blobNodes).map(el => {\n        const blobRect = el.getBoundingClientRect();\n        // Center of the blob in container-local coordinates\n        const centerX = blobRect.left + blobRect.width / 2 - rect.left;\n        const centerY = blobRect.top + blobRect.height / 2 - rect.top;\n        // Use computed style or data attribute for color if needed\n        const color = el.dataset.blobColor || '255,0,0';\n        const radius = Math.max(blobRect.width, blobRect.height) / 2;\n        return {\n          x: centerX,\n          y: centerY,\n          radius,\n          color\n        };\n      });\n      // Add single pointer-following blob if enabled\n      let pointerBlobs = [];\n      if (ENABLE_POINTER_BLOBS && pointerBlobRef.current) {\n        pointerBlobs = [{\n          x: pointerBlobRef.current.x,\n          y: pointerBlobRef.current.y,\n          radius: pointerBlobRef.current.radius,\n          color: pointerBlobRef.current.color\n        }];\n      }\n      window.__backgroundBlobs = [...blobs, ...pointerBlobs];\n    }\n    updateLiveBlobPositions();\n    const interval = setInterval(updateLiveBlobPositions, 1000 / 30); // 30fps\n    return () => clearInterval(interval);\n  }, [containerRef]);\n\n  // Remove animation frame update for debug sample; rely on mousemove to update debug dot\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  // Set to false to disable mouse-following blobs\n  const ENABLE_POINTER_BLOBS = true;\n\n  // Helper: normalize a point to [0,1] within the container\n  function normalizeToContainer(x, y) {\n    var _containerRef$current2;\n    const rect = (_containerRef$current2 = containerRef.current) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.getBoundingClientRect();\n    if (!rect) return {\n      normalizedX: 0,\n      normalizedY: 0\n    };\n    let clampedX = x;\n    let clampedY = y;\n    if (clampedX < rect.left) clampedX = rect.left;\n    if (clampedX > rect.right) clampedX = rect.right;\n    if (clampedY < rect.top) clampedY = rect.top;\n    if (clampedY > rect.bottom) clampedY = rect.bottom;\n    return {\n      normalizedX: (clampedX - rect.left) / rect.width,\n      normalizedY: (clampedY - rect.top) / rect.height\n    };\n  }\n\n  // Helper: convert window (client) coordinates to normalized [0,1] in container\n  function windowToNormalized(x, y) {\n    var _containerRef$current3;\n    const rect = (_containerRef$current3 = containerRef.current) === null || _containerRef$current3 === void 0 ? void 0 : _containerRef$current3.getBoundingClientRect();\n    if (!rect) return {\n      normalizedX: 0,\n      normalizedY: 0\n    };\n    return {\n      normalizedX: (x - rect.left) / rect.width,\n      normalizedY: (y - rect.top) / rect.height\n    };\n  }\n\n  // Helper: convert normalized [0,1] in container to window (client) coordinates\n  function normalizedToWindow(normalizedX, normalizedY) {\n    var _containerRef$current4;\n    const rect = (_containerRef$current4 = containerRef.current) === null || _containerRef$current4 === void 0 ? void 0 : _containerRef$current4.getBoundingClientRect();\n    if (!rect) return {\n      x: 0,\n      y: 0\n    };\n    return {\n      x: rect.left + normalizedX * rect.width,\n      y: rect.top + normalizedY * rect.height\n    };\n  }\n\n  // Render a red dot at the last sampled coordinate (for debug)\n  const renderDebugSampleDot = () => {\n    if (!debugSample || !containerRef.current) return null;\n    const rect = containerRef.current.getBoundingClientRect();\n    const {\n      normalizedX: debugNormX,\n      normalizedY: debugNormY\n    } = windowToNormalized(debugSample.x, debugSample.y);\n    // Map normalized back to container pixel space\n    const {\n      x: dotX,\n      y: dotY\n    } = normalizedToWindow(debugNormX, debugNormY);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        left: dotX - 6,\n        top: dotY - 6,\n        width: 12,\n        height: 12,\n        borderRadius: 6,\n        background: \"red\",\n        zIndex: 99999,\n        pointerEvents: \"none\",\n        boxShadow: \"0 0 8px 2px rgba(255,0,0,0.5)\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render a debug dot at every blob's center\n  const renderAllBlobDebugDots = () => {\n    if (!containerRef.current || !window.__backgroundBlobs) return null;\n    const blobs = window.__backgroundBlobs;\n    const rect = containerRef.current.getBoundingClientRect();\n    return blobs.map((blob, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        left: rect.left + blob.x - 6,\n        top: rect.top + blob.y - 6,\n        width: 12,\n        height: 12,\n        borderRadius: 6,\n        background: \"red\",\n        border: \"2px solid black\",\n        zIndex: 99999,\n        pointerEvents: \"none\",\n        boxShadow: \"0 0 8px 2px rgba(255,0,0,0.5)\"\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this));\n  };\n\n  // Track debug tick for periodic re-render\n  const [debugTick, setDebugTick] = useState(0);\n  // # NEW CODE - TESTING: periodic debug sampler\n  useEffect(() => {\n    // Store the last sampled mouse position\n    let lastX = 0;\n    let lastY = 0;\n    function updateLastMouse(e) {\n      lastX = e.clientX;\n      lastY = e.clientY;\n    }\n    window.addEventListener('mousemove', updateLastMouse);\n    // Sample every 500ms\n    const interval = setInterval(() => {\n      if (typeof window.__getBackgroundColorAt === 'function') {\n        window.__getBackgroundColorAt(lastX, lastY);\n      }\n      setDebugTick(tick => tick + 1); // force re-render of debug dots\n    }, 500);\n    return () => {\n      window.removeEventListener('mousemove', updateLastMouse);\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackgroundColorContext.Provider, {\n    value: {\n      getBackgroundColorAt\n    },\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: containerRef,\n        className: cn(\"h-full w-full relative overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))] pointer-events-none\", containerClassName),\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"filter\", {\n              id: \"blurMe\",\n              children: [/*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n                in: \"SourceGraphic\",\n                stdDeviation: \"10\",\n                result: \"blur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n                in: \"blur\",\n                mode: \"matrix\",\n                values: \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\",\n                result: \"goo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n                in: \"SourceGraphic\",\n                in2: \"goo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: className,\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"gradients-container h-full w-full blur-lg\", isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] left-[5%] [transform-origin:top_left] animate-first opacity-100\"),\n            \"data-blob-color\": firstColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] right-[5%] [transform-origin:top_right] animate-second opacity-100\"),\n            \"data-blob-color\": secondColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] left-[5%] [transform-origin:bottom_left] animate-third opacity-100\"),\n            \"data-blob-color\": thirdColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] right-[5%] [transform-origin:bottom_right] animate-fourth opacity-70\"),\n            \"data-blob-color\": fourthColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[50%] left-[50%] [transform-origin:center_center] animate-fifth opacity-100\"),\n            \"data-blob-color\": fifthColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[2%] left-[10%] [transform-origin:top_left] animate-first opacity-100\"),\n            \"data-blob-color\": firstColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[1%] right-[15%] [transform-origin:top_right] animate-second opacity-100\"),\n            \"data-blob-color\": secondColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[3%] left-[50%] [transform-origin:top_center] animate-third opacity-100\"),\n            \"data-blob-color\": thirdColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[0%] left-[30%] [transform-origin:top_left] animate-fourth opacity-100\"),\n            \"data-blob-color\": fourthColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[2%] left-[10%] [transform-origin:bottom_left] animate-third opacity-100\"),\n            \"data-blob-color\": thirdColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[1%] right-[15%] [transform-origin:bottom_right] animate-fourth opacity-100\"),\n            \"data-blob-color\": fourthColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[3%] left-[50%] [transform-origin:bottom_center] animate-fifth opacity-100\"),\n            \"data-blob-color\": fifthColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[0%] left-[30%] [transform-origin:bottom_left] animate-first opacity-100\"),\n            \"data-blob-color\": firstColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.5)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[40%] left-[5%] [transform-origin:left_center] animate-fifth opacity-70\"),\n            \"data-blob-color\": fifthColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cn(\"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.5)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[35%] right-[5%] [transform-origin:right_center] animate-first opacity-70\"),\n            \"data-blob-color\": firstColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), ENABLE_POINTER_BLOBS && interactive && pointerBlob && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: `radial-gradient(circle at center, rgba(${pointerBlob.color}, 0.95) 0%, rgba(${pointerBlob.color}, 0.7) 60%, rgba(${pointerBlob.color}, 0.0) 100%)`,\n              mixBlendMode: 'lighten',\n              position: 'absolute',\n              width: `${pointerBlob.size * 100}%`,\n              height: `${pointerBlob.size * 100}%`,\n              top: `calc(${pointerBlob.y}px - ${pointerBlob.size * 50}%)`,\n              left: `calc(${pointerBlob.x}px - ${pointerBlob.size * 50}%)`,\n              borderRadius: '50%',\n              opacity: 1,\n              pointerEvents: 'none',\n              transition: 'none',\n              filter: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 589,\n    columnNumber: 5\n  }, this);\n};\n_s(BackgroundGradientAnimation, \"wv7HK100/Pe+tlKXaUZNnHCYqUo=\");\n_c = BackgroundGradientAnimation;\nvar _c;\n$RefreshReg$(_c, \"BackgroundGradientAnimation\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","useState","createContext","cn","jsxDEV","_jsxDEV","Fragment","_Fragment","BackgroundColorContext","undefined","BackgroundGradientAnimation","gradientBackgroundStart","gradientBackgroundEnd","firstColor","secondColor","thirdColor","fourthColor","fifthColor","pointerColor","size","blendingValue","children","className","interactive","containerClassName","containerRef","containerRectRef","updateRect","current","getBoundingClientRect","window","addEventListener","removeEventListener","curX","setCurX","curY","setCurY","tgX","setTgX","tgY","setTgY","isDarkMode","setIsDarkMode","dynamicPointerColor","setDynamicPointerColor","targetPointerColor","setTargetPointerColor","animationFrameRef","POINTER_BLOB_RADIUS","POINTER_BLOB_SIZE","pointerBlob","setPointerBlob","x","y","color","radius","pointerBlobRef","colorDistance","color1","color2","rgb1","split","map","c","parseInt","trim","rgb2","Math","sqrt","pow","blendColors","weight","blended","c1","i","round","join","selectContrastingColor","mouseX","mouseY","colors","containerWidth","innerWidth","containerHeight","innerHeight","normalizedX","normalizedY","regions","closestRegion","minDistance","Infinity","forEach","region","distance","mostContrastingColor","maxContrast","contrast","influenceRadius","distanceFromClosest","influenceStrength","max","smoothInfluence","neutralColor","lastSampledCoord","debugSample","setDebugSample","getBackgroundColorAt","_containerRef$current","rect","clampedX","clampedY","left","right","top","bottom","width","height","parseRGB","str","match","lerp","a","b","t","lerpColor","c2","gradStart","gradEnd","gradColor","animatedBlobs","__backgroundBlobs","totalWeight","container","offsetWidth","offsetHeight","sampleX","sampleY","Array","isArray","length","sum","blob","baseRadius","effectiveRadius","dist","w","blobColor","startsWith","hexToRgb","Number","avg","colorString","bgColorString","hex","h","replace","substring","checkDarkMode","document","documentElement","classList","contains","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","bgStart","bgEnd","first","second","third","fourth","fifth","pointer","body","style","setProperty","running","animate","prev","requestAnimationFrame","rgbToString","rgb","lerpColors","from","to","cancelAnimationFrame","handleMouseMove","event","relativeX","clientX","relativeY","clientY","contrastingColor","__getBackgroundColorAt","updateLiveBlobPositions","blobNodes","querySelectorAll","blobs","el","blobRect","centerX","centerY","dataset","pointerBlobs","ENABLE_POINTER_BLOBS","interval","setInterval","clearInterval","isSafari","setIsSafari","test","navigator","userAgent","normalizeToContainer","_containerRef$current2","windowToNormalized","_containerRef$current3","normalizedToWindow","_containerRef$current4","renderDebugSampleDot","debugNormX","debugNormY","dotX","dotY","position","borderRadius","background","zIndex","pointerEvents","boxShadow","fileName","lineNumber","columnNumber","renderAllBlobDebugDots","border","debugTick","setDebugTick","lastX","lastY","updateLastMouse","e","tick","Provider","value","ref","id","in","stdDeviation","result","mode","values","in2","mixBlendMode","opacity","transition","filter","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Portfolio/src/ui/background-gradient-animation.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef, useState, createContext } from \"react\";\nimport { cn } from \"../lib/utils\";\n\n// Context for background color sampling\nexport const BackgroundColorContext = createContext<{ getBackgroundColorAt: (x: number, y: number) => string } | undefined>(undefined);\n\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n}: {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n}) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const containerRectRef = useRef<DOMRect | null>(null);\n  // Update rect on mount and resize\n  useEffect(() => {\n    function updateRect() {\n      if (containerRef.current) {\n        containerRectRef.current = containerRef.current.getBoundingClientRect();\n      }\n    }\n    updateRect();\n    window.addEventListener('resize', updateRect);\n    return () => window.removeEventListener('resize', updateRect);\n  }, []);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dynamicPointerColor, setDynamicPointerColor] = useState(pointerColor);\n  const [targetPointerColor, setTargetPointerColor] = useState(pointerColor);\n  const animationFrameRef = useRef<number | null>(null);\n\n  // Multiple animated blobs for the mouse gradient\n  // Single pointer-following blob\n  const POINTER_BLOB_RADIUS = 48; // px\n  const POINTER_BLOB_SIZE = 0.08; // 8% of container width\n  const [pointerBlob, setPointerBlob] = useState({\n    x: 0,\n    y: 0,\n    color: pointerColor,\n    size: POINTER_BLOB_SIZE,\n    radius: POINTER_BLOB_RADIUS,\n  });\n\n  // Swarm center inertia state\n  // No swarm/orbit logic needed for single blob\n\n  // Use refs to always access latest blobs and swarm\n  const pointerBlobRef = useRef(pointerBlob);\n  useEffect(() => { pointerBlobRef.current = pointerBlob; }, [pointerBlob]);\n\n  // Function to calculate color distance (RGB Euclidean distance)\n  const colorDistance = (color1: string, color2: string): number => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    return Math.sqrt(\n      Math.pow(rgb1[0] - rgb2[0], 2) + \n      Math.pow(rgb1[1] - rgb2[1], 2) + \n      Math.pow(rgb1[2] - rgb2[2], 2)\n    );\n  };\n\n  // Function to blend colors based on RGB values\n  const blendColors = (color1: string, color2: string, weight: number): string => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    \n    const blended = rgb1.map((c1, i) => \n      Math.round(c1 * (1 - weight) + rgb2[i] * weight)\n    );\n    \n    return blended.join(', ');\n  };\n\n  // Function to get smooth contrasting color based on mouse position\n  const selectContrastingColor = (mouseX: number, mouseY: number) => {\n    const colors = isDarkMode ? [\n      \"37, 99, 235\",   // first\n      \"126, 34, 206\",  // second\n      \"6, 182, 212\",   // third\n      \"190, 24, 93\",   // fourth\n      \"21, 128, 61\"    // fifth\n    ] : [\n      firstColor,\n      secondColor,\n      thirdColor,\n      fourthColor,\n      fifthColor\n    ];\n\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    \n    // Normalize mouse position to 0-1 range\n    const normalizedX = mouseX / containerWidth;\n    const normalizedY = mouseY / containerHeight;\n    \n    // Define gradient regions with their positions and colors\n    const regions = [\n      { x: 0.2, y: 0.1, color: colors[0] },      // Top-left\n      { x: 0.8, y: 0.1, color: colors[1] },      // Top-right\n      { x: 0.5, y: 0.5, color: colors[2] },      // Center\n      { x: 0.2, y: 0.8, color: colors[3] },      // Bottom-left\n      { x: 0.8, y: 0.8, color: colors[4] },      // Bottom-right\n    ];\n\n    // Find the closest region to determine the base contrasting color\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    \n    regions.forEach(region => {\n      const distance = Math.sqrt(\n        Math.pow(normalizedX - region.x, 2) + \n        Math.pow(normalizedY - region.y, 2)\n      );\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n\n    // Find the most contrasting color to the closest region\n    let mostContrastingColor = colors[0];\n    let maxContrast = 0;\n\n    colors.forEach(color => {\n      const contrast = colorDistance(closestRegion.color, color);\n      if (contrast > maxContrast) {\n        maxContrast = contrast;\n        mostContrastingColor = color;\n      }\n    });\n\n    // Calculate smooth transition based on distance from closest region\n    // Use a much larger influence radius for smoother, longer transitions\n    const influenceRadius = 8.0; // 800% of screen size (very large/global reach)\n    const distanceFromClosest = Math.sqrt(\n      Math.pow(normalizedX - closestRegion.x, 2) + \n      Math.pow(normalizedY - closestRegion.y, 2)\n    );\n    \n    // Create smooth falloff - closer to region = stronger contrasting effect\n    const influenceStrength = Math.max(0, 1 - (distanceFromClosest / influenceRadius));\n    \n    // Use a softer curve for the transition\n    const smoothInfluence = Math.pow(influenceStrength, 1.1);\n    \n    // Blend between neutral color and contrasting color based on influence\n    const neutralColor = isDarkMode ? \"37, 99, 235\" : firstColor;\n    return blendColors(neutralColor, mostContrastingColor, smoothInfluence * 0.7);\n  };\n\n  // For debug: store the last sampled coordinate\n  let lastSampledCoord: { x: number; y: number } | null = null;\n  // Function to get the background color at a given (x, y) coordinate (in px, relative to window)\n  // This is a simplified version: returns the closest region's color (could be improved for gradients)\n  const [debugSample, setDebugSample] = useState<{ x: number; y: number } | null>(null);\n  const getBackgroundColorAt = (x: number, y: number) => {\n    // For debug: store the last sampled coordinate\n    lastSampledCoord = { x, y };\n    setDebugSample({ x, y });\n    const rect = containerRef.current?.getBoundingClientRect();\n    if (!rect) return 'rgb(255,255,255)';\n    // Clamp x/y to container bounds (same as blob rendering)\n    let clampedX = x;\n    let clampedY = y;\n    if (clampedX < rect.left) clampedX = rect.left;\n    if (clampedX > rect.right) clampedX = rect.right;\n    if (clampedY < rect.top) clampedY = rect.top;\n    if (clampedY > rect.bottom) clampedY = rect.bottom;\n    const normalizedX = (clampedX - rect.left) / rect.width;\n    const normalizedY = (clampedY - rect.top) / rect.height;\n    // Linear gradient color (top to bottom)\n    const parseRGB = (str: string): [number, number, number] => {\n      const match = str.match(/rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)/);\n      if (!match) return [255,255,255];\n      return [parseInt(match[1]), parseInt(match[2]), parseInt(match[3])];\n    };\n    const lerp = (a: number, b: number, t: number): number => a + (b - a) * t;\n    const lerpColor = (c1: [number, number, number], c2: [number, number, number], t: number): [number, number, number] => [\n      Math.round(lerp(c1[0], c2[0], t)),\n      Math.round(lerp(c1[1], c2[1], t)),\n      Math.round(lerp(c1[2], c2[2], t)),\n    ];\n    const gradStart = parseRGB(isDarkMode ? \"rgb(15, 23, 42)\" : gradientBackgroundStart);\n    const gradEnd = parseRGB(isDarkMode ? \"rgb(2, 6, 23)\" : gradientBackgroundEnd);\n    const gradColor = lerpColor(gradStart, gradEnd, normalizedY);\n    // Use animated background blobs from window.__backgroundBlobs if available\n    const animatedBlobs = (window as any).__backgroundBlobs as Array<{ x: number; y: number; radius: number; color: string }>;\n    let totalWeight = 0;\n    let blended = [0, 0, 0];\n    const container = containerRef.current;\n    if (!container) return `rgb(${gradColor[0]},${gradColor[1]},${gradColor[2]})`;\n    const width = container.offsetWidth;\n    const height = container.offsetHeight;\n    const sampleX = normalizedX * width;\n    const sampleY = normalizedY * height;\n    // Debug: log animated blob positions and sample info\n    if (animatedBlobs && Array.isArray(animatedBlobs)) {\n      // # OLD CODE - KEEP UNTIL CONFIRMED WORKING\n      // console.log('[getBackgroundColorAt] sample', {\n      //   sampleX, sampleY, animatedBlobs: animatedBlobs.map(b => ({ x: b.x, y: b.y, radius: b.radius, color: b.color }))\n      // });\n      // # NEW CODE - TESTING: plain text log\n      // console.log(`getBackgroundColorAt: sample (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)})`);\n    }\n    if (animatedBlobs && Array.isArray(animatedBlobs) && animatedBlobs.length > 0) {\n      // # OLD CODE - KEEP UNTIL CONFIRMED WORKING\n      // if (totalWeight > 0) {\n      //   blended = blended.map(c => Math.round(c / totalWeight)) as [number, number, number];\n      //   const colorString = `rgb(${blended[0]},${blended[1]},${blended[2]})`;\n      //   // # NEW CODE - TESTING: plain text log for result\n      //   // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${colorString}`);\n      //   return colorString;\n      // }\n      // # NEW CODE - TESTING: only inner 50% of radius contributes\n      let sum = [0, 0, 0];\n      let totalWeight = 0;\n      animatedBlobs.forEach((blob: any, i: number) => {\n        // Apply a larger offset to the effective radius for sampling\n        const baseRadius = blob.radius * 0.5; // Only inner half\n        const effectiveRadius = Math.max(8, baseRadius - 20); // Subtract 20px, clamp to minimum 8px\n        const dist = Math.sqrt(Math.pow(sampleX - blob.x, 2) + Math.pow(sampleY - blob.y, 2));\n        if (dist <= effectiveRadius) {\n          const t = dist / effectiveRadius;\n          const w = 1 - t * t; // smoothstep falloff\n          const blobColor = blob.color.startsWith('#')\n            ? hexToRgb(blob.color)\n            : blob.color.split(',').map(Number) as [number, number, number];\n          const blended = [\n            gradColor[0] * (1 - w) + blobColor[0] * w,\n            gradColor[1] * (1 - w) + blobColor[1] * w,\n            gradColor[2] * (1 - w) + blobColor[2] * w,\n          ];\n          // console.log(`Blob ${i}: dist=${dist.toFixed(1)}, effRadius=${effectiveRadius.toFixed(1)}, t=${t.toFixed(2)}, w=${w.toFixed(2)}, blobColor=[${blobColor}], blended=[${blended.map(x=>x.toFixed(1))}]`);\n          sum[0] += blended[0] * w;\n          sum[1] += blended[1] * w;\n          sum[2] += blended[2] * w;\n          totalWeight += w;\n        } else {\n          // console.log(`Blob ${i}: dist=${dist.toFixed(1)}, effRadius=${effectiveRadius.toFixed(1)} (out of range)`);\n        }\n      });\n      if (totalWeight > 0) {\n        const avg = sum.map(c => Math.round(c / totalWeight)) as [number, number, number];\n        const colorString = `rgb(${avg[0]},${avg[1]},${avg[2]})`;\n        // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${colorString} (CSS-matched blend)`);\n        return colorString;\n      }\n      // # NEW CODE - TESTING: fallback to background color if not enough blob influence\n      const bgColorString = `rgb(${gradColor[0]},${gradColor[1]},${gradColor[2]})`;\n      // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${bgColorString} (background)`);\n      return bgColorString;\n      // # OLD CODE - KEEP UNTIL CONFIRMED WORKING\n      // if (totalWeight > 0) {\n      //   blended = blended.map(c => Math.round(c / totalWeight)) as [number, number, number];\n      //   const colorString = `rgb(${blended[0]},${blended[1]},${blended[2]})`;\n      //   // # NEW CODE - TESTING: plain text log for result\n      //   // console.log(`getBackgroundColorAt: result at (${sampleX.toFixed(1)}, ${sampleY.toFixed(1)}): ${colorString}`);\n      //   return colorString;\n      // }\n    }\n    // Fallback to gradient color\n    return `rgb(${gradColor[0]},${gradColor[1]},${gradColor[2]})`;\n    // Helper to convert hex color to rgb array\n    function hexToRgb(hex: string): [number, number, number] {\n      const h = hex.replace('#', '');\n      return [\n        parseInt(h.substring(0, 2), 16),\n        parseInt(h.substring(2, 4), 16),\n        parseInt(h.substring(4, 6), 16),\n      ];\n    }\n  };\n\n  // Detect dark mode\n  useEffect(() => {\n    const checkDarkMode = () => {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    };\n    \n    checkDarkMode();\n    const observer = new MutationObserver(checkDarkMode);\n    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });\n    \n    return () => observer.disconnect();\n  }, []);\n\n  // Set colors based on theme\n  useEffect(() => {\n    const colors = isDarkMode ? {\n      bgStart: \"rgb(15, 23, 42)\",\n      bgEnd: \"rgb(2, 6, 23)\",\n      first: \"37, 99, 235\",\n      second: \"126, 34, 206\",\n      third: \"6, 182, 212\",\n      fourth: \"190, 24, 93\",\n      fifth: \"21, 128, 61\",\n      pointer: \"37, 99, 235\"\n    } : {\n      bgStart: gradientBackgroundStart,\n      bgEnd: gradientBackgroundEnd,\n      first: firstColor,\n      second: secondColor,\n      third: thirdColor,\n      fourth: fourthColor,\n      fifth: fifthColor,\n      pointer: pointerColor\n    };\n\n    document.body.style.setProperty(\"--gradient-background-start\", colors.bgStart);\n    document.body.style.setProperty(\"--gradient-background-end\", colors.bgEnd);\n    document.body.style.setProperty(\"--first-color\", colors.first);\n    document.body.style.setProperty(\"--second-color\", colors.second);\n    document.body.style.setProperty(\"--third-color\", colors.third);\n    document.body.style.setProperty(\"--fourth-color\", colors.fourth);\n    document.body.style.setProperty(\"--fifth-color\", colors.fifth);\n    document.body.style.setProperty(\"--pointer-color\", colors.pointer);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, [isDarkMode, gradientBackgroundStart, gradientBackgroundEnd, firstColor, secondColor, thirdColor, fourthColor, fifthColor, pointerColor, size, blendingValue]);\n\n  // Animation loop for smooth mouse tracking (fixes infinite loop)\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setCurX(prev => prev + (tgX - prev) / 20);\n      setCurY(prev => prev + (tgY - prev) / 20);\n      if (running) requestAnimationFrame(animate);\n    }\n    animate();\n    return () => { running = false; };\n  }, [tgX, tgY]);\n\n  // Helper: parse rgb string to array\n  const parseRGB = (color: string): [number, number, number] => {\n    return color.split(',').map(c => parseInt(c.trim(), 10)) as [number, number, number];\n  };\n  // Helper: rgb array to string\n  const rgbToString = (rgb: [number, number, number]) => `${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n  // Helper: lerp between two rgb arrays\n  const lerpColors = (from: [number, number, number], to: [number, number, number], t: number): [number, number, number] => {\n    return [\n      Math.round(from[0] + (to[0] - from[0]) * t),\n      Math.round(from[1] + (to[1] - from[1]) * t),\n      Math.round(from[2] + (to[2] - from[2]) * t),\n    ];\n  };\n\n  // Animation loop for smooth color interpolation\n  // Animate pointer blob to follow the mouse\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setPointerBlob(prev => ({\n        ...prev,\n        x: tgX,\n        y: tgY,\n        color: selectContrastingColor(tgX, tgY),\n      }));\n      if (running) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    }\n    animationFrameRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n    };\n  }, [tgX, tgY]);\n\n  // Global mousemove handler for robust tracking\n  useEffect(() => {\n    function handleMouseMove(event: MouseEvent) {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const relativeX = event.clientX - rect.left;\n      const relativeY = event.clientY - rect.top;\n      setTgX(relativeX);\n      setTgY(relativeY);\n      // Update debug sample color on mouse move\n      setDebugSample({ x: event.clientX, y: event.clientY });\n      // Update target color only\n      const contrastingColor = selectContrastingColor(relativeX, relativeY);\n      setTargetPointerColor(contrastingColor);\n    }\n    if (interactive) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [interactive]);\n\n  // Register global background color sampling function\n  useEffect(() => {\n    (window as any).__getBackgroundColorAt = getBackgroundColorAt;\n    return () => {\n      if ((window as any).__getBackgroundColorAt === getBackgroundColorAt) {\n        delete (window as any).__getBackgroundColorAt;\n      }\n    };\n  });\n\n  // Expose live positions of CSS-animated background blobs for color sampling\n  useEffect(() => {\n    function updateLiveBlobPositions() {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      // Query all background blob elements by a class or data attribute\n      const blobNodes = containerRef.current.querySelectorAll('.background-blob');\n      const blobs = Array.from(blobNodes).map((el: Element) => {\n        const blobRect = (el as HTMLElement).getBoundingClientRect();\n        // Center of the blob in container-local coordinates\n        const centerX = blobRect.left + blobRect.width / 2 - rect.left;\n        const centerY = blobRect.top + blobRect.height / 2 - rect.top;\n        // Use computed style or data attribute for color if needed\n        const color = (el as HTMLElement).dataset.blobColor || '255,0,0';\n        const radius = Math.max(blobRect.width, blobRect.height) / 2;\n        return { x: centerX, y: centerY, radius, color };\n      });\n      // Add single pointer-following blob if enabled\n      let pointerBlobs: any[] = [];\n      if (ENABLE_POINTER_BLOBS && pointerBlobRef.current) {\n        pointerBlobs = [{\n          x: pointerBlobRef.current.x,\n          y: pointerBlobRef.current.y,\n          radius: pointerBlobRef.current.radius,\n          color: pointerBlobRef.current.color,\n        }];\n      }\n      (window as any).__backgroundBlobs = [...blobs, ...pointerBlobs];\n    }\n    updateLiveBlobPositions();\n    const interval = setInterval(updateLiveBlobPositions, 1000 / 30); // 30fps\n    return () => clearInterval(interval);\n  }, [containerRef]);\n\n  // Remove animation frame update for debug sample; rely on mousemove to update debug dot\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  // Set to false to disable mouse-following blobs\n  const ENABLE_POINTER_BLOBS = true;\n\n  // Helper: normalize a point to [0,1] within the container\n  function normalizeToContainer(x: number, y: number): { normalizedX: number; normalizedY: number } {\n    const rect = containerRef.current?.getBoundingClientRect();\n    if (!rect) return { normalizedX: 0, normalizedY: 0 };\n    let clampedX = x;\n    let clampedY = y;\n    if (clampedX < rect.left) clampedX = rect.left;\n    if (clampedX > rect.right) clampedX = rect.right;\n    if (clampedY < rect.top) clampedY = rect.top;\n    if (clampedY > rect.bottom) clampedY = rect.bottom;\n    return {\n      normalizedX: (clampedX - rect.left) / rect.width,\n      normalizedY: (clampedY - rect.top) / rect.height,\n    };\n  }\n\n  // Helper: convert window (client) coordinates to normalized [0,1] in container\n  function windowToNormalized(x: number, y: number): { normalizedX: number; normalizedY: number } {\n    const rect = containerRef.current?.getBoundingClientRect();\n    if (!rect) return { normalizedX: 0, normalizedY: 0 };\n    return {\n      normalizedX: (x - rect.left) / rect.width,\n      normalizedY: (y - rect.top) / rect.height,\n    };\n  }\n\n  // Helper: convert normalized [0,1] in container to window (client) coordinates\n  function normalizedToWindow(normalizedX: number, normalizedY: number): { x: number; y: number } {\n    const rect = containerRef.current?.getBoundingClientRect();\n    if (!rect) return { x: 0, y: 0 };\n    return {\n      x: rect.left + normalizedX * rect.width,\n      y: rect.top + normalizedY * rect.height,\n    };\n  }\n\n  // Render a red dot at the last sampled coordinate (for debug)\n  const renderDebugSampleDot = () => {\n    if (!debugSample || !containerRef.current) return null;\n    const rect = containerRef.current.getBoundingClientRect();\n    const { normalizedX: debugNormX, normalizedY: debugNormY } = windowToNormalized(debugSample.x, debugSample.y);\n    // Map normalized back to container pixel space\n    const { x: dotX, y: dotY } = normalizedToWindow(debugNormX, debugNormY);\n    return (\n      <div\n        style={{\n          position: \"fixed\",\n          left: dotX - 6,\n          top: dotY - 6,\n          width: 12,\n          height: 12,\n          borderRadius: 6,\n          background: \"red\",\n          zIndex: 99999,\n          pointerEvents: \"none\",\n          boxShadow: \"0 0 8px 2px rgba(255,0,0,0.5)\",\n        }}\n      />\n    );\n  };\n\n  // Render a debug dot at every blob's center\n  const renderAllBlobDebugDots = () => {\n    if (!containerRef.current || !(window as any).__backgroundBlobs) return null;\n    const blobs: any[] = (window as any).__backgroundBlobs;\n    const rect = containerRef.current.getBoundingClientRect();\n    return blobs.map((blob, i) => (\n      <div\n        key={i}\n        style={{\n          position: \"fixed\",\n          left: rect.left + blob.x - 6,\n          top: rect.top + blob.y - 6,\n          width: 12,\n          height: 12,\n          borderRadius: 6,\n          background: \"red\",\n          border: \"2px solid black\",\n          zIndex: 99999,\n          pointerEvents: \"none\",\n          boxShadow: \"0 0 8px 2px rgba(255,0,0,0.5)\",\n        }}\n      />\n    ));\n  };\n\n  // Track debug tick for periodic re-render\n  const [debugTick, setDebugTick] = useState(0);\n  // # NEW CODE - TESTING: periodic debug sampler\n  useEffect(() => {\n    // Store the last sampled mouse position\n    let lastX = 0;\n    let lastY = 0;\n    function updateLastMouse(e: MouseEvent) {\n      lastX = e.clientX;\n      lastY = e.clientY;\n    }\n    window.addEventListener('mousemove', updateLastMouse);\n    // Sample every 500ms\n    const interval = setInterval(() => {\n      if (typeof (window as any).__getBackgroundColorAt === 'function') {\n        (window as any).__getBackgroundColorAt(lastX, lastY);\n      }\n      setDebugTick(tick => tick + 1); // force re-render of debug dots\n    }, 500);\n    return () => {\n      window.removeEventListener('mousemove', updateLastMouse);\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <BackgroundColorContext.Provider value={{ getBackgroundColorAt }}>\n      <>\n        <div\n          ref={containerRef}\n          className={cn(\n            \"h-full w-full relative overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))] pointer-events-none\",\n            containerClassName\n          )}\n        >\n          <svg className=\"hidden\">\n            <defs>\n              <filter id=\"blurMe\">\n                <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n                <feColorMatrix\n                  in=\"blur\"\n                  mode=\"matrix\"\n                  values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n                  result=\"goo\"\n                />\n                <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n              </filter>\n            </defs>\n          </svg>\n          <div className={className}>{children}</div>\n          <div\n            className={cn(\n              \"gradients-container h-full w-full blur-lg\",\n              isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"\n            )}\n          >\n            {/* Evenly distributed background blobs: corners, edges, center */}\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] left-[5%] [transform-origin:top_left] animate-first opacity-100\"\n              )}\n              data-blob-color={firstColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] right-[5%] [transform-origin:top_right] animate-second opacity-100\"\n              )}\n              data-blob-color={secondColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] left-[5%] [transform-origin:bottom_left] animate-third opacity-100\"\n              )}\n              data-blob-color={thirdColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] right-[5%] [transform-origin:bottom_right] animate-fourth opacity-70\"\n              )}\n              data-blob-color={fourthColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[50%] left-[50%] [transform-origin:center_center] animate-fifth opacity-100\"\n              )}\n              data-blob-color={fifthColor}\n            ></div>\n            {/* Additional gradients for better coverage - very top areas */}\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[2%] left-[10%] [transform-origin:top_left] animate-first opacity-100\"\n              )}\n              data-blob-color={firstColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[1%] right-[15%] [transform-origin:top_right] animate-second opacity-100\"\n              )}\n              data-blob-color={secondColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[3%] left-[50%] [transform-origin:top_center] animate-third opacity-100\"\n              )}\n              data-blob-color={thirdColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[0%] left-[30%] [transform-origin:top_left] animate-fourth opacity-100\"\n              )}\n              data-blob-color={fourthColor}\n            ></div>\n            {/* Additional gradients for better coverage - very bottom areas */}\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[2%] left-[10%] [transform-origin:bottom_left] animate-third opacity-100\"\n              )}\n              data-blob-color={thirdColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[1%] right-[15%] [transform-origin:bottom_right] animate-fourth opacity-100\"\n              )}\n              data-blob-color={fourthColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[3%] left-[50%] [transform-origin:bottom_center] animate-fifth opacity-100\"\n              )}\n              data-blob-color={fifthColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[0%] left-[30%] [transform-origin:bottom_left] animate-first opacity-100\"\n              )}\n              data-blob-color={firstColor}\n            ></div>\n            {/* Additional gradients for better coverage - middle areas */}\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.5)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[40%] left-[5%] [transform-origin:left_center] animate-fifth opacity-70\"\n              )}\n              data-blob-color={fifthColor}\n            ></div>\n            <div\n              className={cn(\n                \"background-blob absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.5)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[35%] right-[5%] [transform-origin:right_center] animate-first opacity-70\"\n              )}\n              data-blob-color={firstColor}\n            ></div>\n            {ENABLE_POINTER_BLOBS && interactive && pointerBlob && (\n              <div\n                style={{\n                  background: `radial-gradient(circle at center, rgba(${pointerBlob.color}, 0.95) 0%, rgba(${pointerBlob.color}, 0.7) 60%, rgba(${pointerBlob.color}, 0.0) 100%)`,\n                  mixBlendMode: 'lighten',\n                  position: 'absolute',\n                  width: `${pointerBlob.size * 100}%`,\n                  height: `${pointerBlob.size * 100}%`,\n                  top: `calc(${pointerBlob.y}px - ${pointerBlob.size * 50}%)`,\n                  left: `calc(${pointerBlob.x}px - ${pointerBlob.size * 50}%)`,\n                  borderRadius: '50%',\n                  opacity: 1,\n                  pointerEvents: 'none',\n                  transition: 'none',\n                  filter: 'none',\n                }}\n              />\n            )}\n          </div>\n        </div>\n        {/*\n        {renderDebugSampleDot()}\n        */}\n        {/*\n        {renderAllBlobDebugDots()}\n        */}\n      </>\n    </BackgroundColorContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}