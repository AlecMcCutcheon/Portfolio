{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Portfolio\\\\src\\\\ui\\\\background-gradient-animation.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState, createContext } from \"react\";\nimport { cn } from \"../lib/utils\";\n\n// Context for background color sampling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BackgroundColorContext = /*#__PURE__*/createContext(undefined);\n\n// Add prop for debug sample points\n\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n  debugSamplePoints\n}) => {\n  _s();\n  const containerRef = useRef(null);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dynamicPointerColor, setDynamicPointerColor] = useState(pointerColor);\n  const [targetPointerColor, setTargetPointerColor] = useState(pointerColor);\n  const animationFrameRef = useRef(null);\n\n  // Multiple animated blobs for the mouse gradient\n  const BLOB_RADIUS_MIN = 48; // px (was 32)\n  const BLOB_RADIUS_MAX = 112; // px (was 64)\n  const BLOB_COUNT = 8;\n  const [blobs, setBlobs] = useState(() => Array.from({\n    length: BLOB_COUNT\n  }, (_, i) => ({\n    id: i,\n    angle: Math.random() * Math.PI * 2,\n    radius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n    targetAngle: Math.random() * Math.PI * 2,\n    targetRadius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n    currentColor: pointerColor,\n    // Each blob's own color\n    color: pointerColor,\n    // For backward compatibility\n    size: 0.10,\n    // 10% for all blobs\n    speed: 0.01 + Math.random() * 0.01,\n    // Slower\n    colorLerp: 0.02 + Math.random() * 0.02 // Each blob gets a lerp factor between 0.02 and 0.04\n  })));\n\n  // Swarm center inertia state\n  const [swarm, setSwarm] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Function to calculate color distance (RGB Euclidean distance)\n  const colorDistance = (color1, color2) => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    return Math.sqrt(Math.pow(rgb1[0] - rgb2[0], 2) + Math.pow(rgb1[1] - rgb2[1], 2) + Math.pow(rgb1[2] - rgb2[2], 2));\n  };\n\n  // Function to blend colors based on RGB values\n  const blendColors = (color1, color2, weight) => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    const blended = rgb1.map((c1, i) => Math.round(c1 * (1 - weight) + rgb2[i] * weight));\n    return blended.join(', ');\n  };\n\n  // Function to get smooth contrasting color based on mouse position\n  const selectContrastingColor = (mouseX, mouseY) => {\n    const colors = isDarkMode ? [\"37, 99, 235\",\n    // first\n    \"126, 34, 206\",\n    // second\n    \"6, 182, 212\",\n    // third\n    \"190, 24, 93\",\n    // fourth\n    \"21, 128, 61\" // fifth\n    ] : [firstColor, secondColor, thirdColor, fourthColor, fifthColor];\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n\n    // Normalize mouse position to 0-1 range\n    const normalizedX = mouseX / containerWidth;\n    const normalizedY = mouseY / containerHeight;\n\n    // Define gradient regions with their positions and colors\n    const regions = [{\n      x: 0.2,\n      y: 0.1,\n      color: colors[0]\n    },\n    // Top-left\n    {\n      x: 0.8,\n      y: 0.1,\n      color: colors[1]\n    },\n    // Top-right\n    {\n      x: 0.5,\n      y: 0.5,\n      color: colors[2]\n    },\n    // Center\n    {\n      x: 0.2,\n      y: 0.8,\n      color: colors[3]\n    },\n    // Bottom-left\n    {\n      x: 0.8,\n      y: 0.8,\n      color: colors[4]\n    } // Bottom-right\n    ];\n\n    // Find the closest region to determine the base contrasting color\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    regions.forEach(region => {\n      const distance = Math.sqrt(Math.pow(normalizedX - region.x, 2) + Math.pow(normalizedY - region.y, 2));\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n\n    // Find the most contrasting color to the closest region\n    let mostContrastingColor = colors[0];\n    let maxContrast = 0;\n    colors.forEach(color => {\n      const contrast = colorDistance(closestRegion.color, color);\n      if (contrast > maxContrast) {\n        maxContrast = contrast;\n        mostContrastingColor = color;\n      }\n    });\n\n    // Calculate smooth transition based on distance from closest region\n    // Use a much larger influence radius for smoother, longer transitions\n    const influenceRadius = 8.0; // 800% of screen size (very large/global reach)\n    const distanceFromClosest = Math.sqrt(Math.pow(normalizedX - closestRegion.x, 2) + Math.pow(normalizedY - closestRegion.y, 2));\n\n    // Create smooth falloff - closer to region = stronger contrasting effect\n    const influenceStrength = Math.max(0, 1 - distanceFromClosest / influenceRadius);\n\n    // Use a softer curve for the transition\n    const smoothInfluence = Math.pow(influenceStrength, 1.1);\n\n    // Blend between neutral color and contrasting color based on influence\n    const neutralColor = isDarkMode ? \"37, 99, 235\" : firstColor;\n    return blendColors(neutralColor, mostContrastingColor, smoothInfluence * 0.7);\n  };\n\n  // Function to get the background color at a given (x, y) coordinate (in px, relative to window)\n  // This is a simplified version: returns the closest region's color (could be improved for gradients)\n  const getBackgroundColorAt = (x, y) => {\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    const normalizedX = x / containerWidth;\n    const normalizedY = y / containerHeight;\n    const colors = isDarkMode ? [\"37, 99, 235\", \"126, 34, 206\", \"6, 182, 212\", \"190, 24, 93\", \"21, 128, 61\"] : [firstColor, secondColor, thirdColor, fourthColor, fifthColor];\n    const regions = [{\n      x: 0.2,\n      y: 0.1,\n      color: colors[0]\n    }, {\n      x: 0.8,\n      y: 0.1,\n      color: colors[1]\n    }, {\n      x: 0.5,\n      y: 0.5,\n      color: colors[2]\n    }, {\n      x: 0.2,\n      y: 0.8,\n      color: colors[3]\n    }, {\n      x: 0.8,\n      y: 0.8,\n      color: colors[4]\n    }];\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    regions.forEach(region => {\n      const distance = Math.sqrt(Math.pow(normalizedX - region.x, 2) + Math.pow(normalizedY - region.y, 2));\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n    return `rgb(${closestRegion.color})`;\n  };\n\n  // Detect dark mode\n  useEffect(() => {\n    const checkDarkMode = () => {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    };\n    checkDarkMode();\n    const observer = new MutationObserver(checkDarkMode);\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class']\n    });\n    return () => observer.disconnect();\n  }, []);\n\n  // Set colors based on theme\n  useEffect(() => {\n    const colors = isDarkMode ? {\n      bgStart: \"rgb(15, 23, 42)\",\n      bgEnd: \"rgb(2, 6, 23)\",\n      first: \"37, 99, 235\",\n      second: \"126, 34, 206\",\n      third: \"6, 182, 212\",\n      fourth: \"190, 24, 93\",\n      fifth: \"21, 128, 61\",\n      pointer: \"37, 99, 235\"\n    } : {\n      bgStart: gradientBackgroundStart,\n      bgEnd: gradientBackgroundEnd,\n      first: firstColor,\n      second: secondColor,\n      third: thirdColor,\n      fourth: fourthColor,\n      fifth: fifthColor,\n      pointer: pointerColor\n    };\n    document.body.style.setProperty(\"--gradient-background-start\", colors.bgStart);\n    document.body.style.setProperty(\"--gradient-background-end\", colors.bgEnd);\n    document.body.style.setProperty(\"--first-color\", colors.first);\n    document.body.style.setProperty(\"--second-color\", colors.second);\n    document.body.style.setProperty(\"--third-color\", colors.third);\n    document.body.style.setProperty(\"--fourth-color\", colors.fourth);\n    document.body.style.setProperty(\"--fifth-color\", colors.fifth);\n    document.body.style.setProperty(\"--pointer-color\", colors.pointer);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, [isDarkMode, gradientBackgroundStart, gradientBackgroundEnd, firstColor, secondColor, thirdColor, fourthColor, fifthColor, pointerColor, size, blendingValue]);\n\n  // Animation loop for smooth mouse tracking (fixes infinite loop)\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setCurX(prev => prev + (tgX - prev) / 20);\n      setCurY(prev => prev + (tgY - prev) / 20);\n      if (running) requestAnimationFrame(animate);\n    }\n    animate();\n    return () => {\n      running = false;\n    };\n  }, [tgX, tgY]);\n\n  // Helper: parse rgb string to array\n  const parseRGB = color => {\n    return color.split(',').map(c => parseInt(c.trim(), 10));\n  };\n  // Helper: rgb array to string\n  const rgbToString = rgb => `${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n  // Helper: lerp between two rgb arrays\n  const lerpColors = (from, to, t) => {\n    return [Math.round(from[0] + (to[0] - from[0]) * t), Math.round(from[1] + (to[1] - from[1]) * t), Math.round(from[2] + (to[2] - from[2]) * t)];\n  };\n\n  // Animation loop for smooth color interpolation\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setDynamicPointerColor(prev => {\n        const from = parseRGB(prev);\n        const to = parseRGB(targetPointerColor);\n        if (from.every((v, i) => Math.abs(v - to[i]) < 2)) {\n          return rgbToString(to);\n        }\n        const lerped = lerpColors(from, to, 0.01); // Slower, smoother\n        return rgbToString(lerped);\n      });\n\n      // Swarm inertia parameters\n      setSwarm(prev => {\n        return {\n          x: tgX,\n          y: tgY\n        };\n      });\n\n      // Animate blob positions (no inertia, just orbit around swarm center)\n      setBlobs(prevBlobs => prevBlobs.map(blob => {\n        // Lerp angle and radius\n        let newAngle = blob.angle + (blob.targetAngle - blob.angle) * blob.speed;\n        let newRadius = blob.radius + (blob.targetRadius - blob.radius) * blob.speed;\n        // Lerp color toward its own color-aware target\n        // Calculate the blob's current screen position\n        const blobX = swarm.x + Math.cos(blob.angle) * blob.radius;\n        const blobY = swarm.y + Math.sin(blob.angle) * blob.radius;\n        // Use selectContrastingColor with the blob's position\n        const blobTargetColor = selectContrastingColor(blobX, blobY);\n        const from = parseRGB(blob.currentColor);\n        const to = parseRGB(blobTargetColor);\n        const lerpedColor = lerpColors(from, to, blob.colorLerp); // Each blob has its own color transition speed\n        // If close to target, pick new random target\n        if (Math.abs(newAngle - blob.targetAngle) < 0.05 && Math.abs(newRadius - blob.targetRadius) < 2) {\n          // Find the nearest actual background gradient blob position\n          const bgBlobs = [{\n            x: 0.05,\n            y: 0.05\n          },\n          // top-[5%] left-[5%]\n          {\n            x: 0.05,\n            y: 0.95\n          },\n          // top-[5%] right-[5%]\n          {\n            x: 0.95,\n            y: 0.05\n          },\n          // bottom-[5%] left-[5%]\n          {\n            x: 0.95,\n            y: 0.95\n          },\n          // bottom-[5%] right-[5%]\n          {\n            x: 0.5,\n            y: 0.5\n          },\n          // top-[50%] left-[50%]\n          {\n            x: 0.02,\n            y: 0.10\n          },\n          // top-[2%] left-[10%]\n          {\n            x: 0.01,\n            y: 0.85\n          },\n          // top-[1%] right-[15%]\n          {\n            x: 0.03,\n            y: 0.50\n          },\n          // top-[3%] left-[50%]\n          {\n            x: 0.00,\n            y: 0.30\n          },\n          // top-[0%] left-[30%]\n          {\n            x: 0.98,\n            y: 0.10\n          },\n          // bottom-[2%] left-[10%]\n          {\n            x: 0.99,\n            y: 0.85\n          },\n          // bottom-[1%] right-[15%]\n          {\n            x: 0.97,\n            y: 0.50\n          },\n          // bottom-[3%] left-[50%]\n          {\n            x: 1.00,\n            y: 0.30\n          },\n          // bottom-[0%] left-[30%]\n          {\n            x: 0.40,\n            y: 0.05\n          },\n          // top-[40%] left-[5%]\n          {\n            x: 0.35,\n            y: 0.95\n          } // top-[35%] right-[5%]\n          ];\n          const containerWidth = window.innerWidth;\n          const containerHeight = window.innerHeight;\n          const swarmNormX = swarm.x / containerWidth;\n          const swarmNormY = swarm.y / containerHeight;\n          let nearestBlob = bgBlobs[0];\n          let minDist = Infinity;\n          for (const blobPos of bgBlobs) {\n            const dist = Math.hypot(blobPos.x - swarmNormX, blobPos.y - swarmNormY);\n            if (dist < minDist) {\n              minDist = dist;\n              nearestBlob = blobPos;\n            }\n          }\n          // Angle from swarm center to nearest background blob\n          const dx = nearestBlob.x * containerWidth - swarm.x;\n          const dy = nearestBlob.y * containerHeight - swarm.y;\n          const blobAngle = Math.atan2(dy, dx);\n          // Pick a random angle, then bias it toward blobAngle\n          let randomAngle = Math.random() * Math.PI * 2;\n          // Bias strength depends on distance: closer = stronger bias, farther = weaker bias\n          // Use a smoothstep curve for bias: bias = max(0.15, min(0.5, 0.5 - minDist * 0.4))\n          // (so bias is 0.5 when on top of blob, 0.15 when far away)\n          let bias = 0.5 - Math.min(minDist, 1) * 0.4;\n          bias = Math.max(0.15, Math.min(0.5, bias));\n          let biasedAngle = randomAngle * (1 - bias) + blobAngle * bias;\n          // Normalize angle to [0, 2PI]\n          if (biasedAngle < 0) biasedAngle += Math.PI * 2;\n          if (biasedAngle > Math.PI * 2) biasedAngle -= Math.PI * 2;\n          newAngle = blob.angle;\n          newRadius = blob.radius;\n          // Allow the radius to exceed the max by up to 40% when bias is strong\n          newRadius = BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN) + BLOB_RADIUS_MAX * 0.4 * (bias - 0.15) / (0.5 - 0.15);\n          return {\n            ...blob,\n            targetAngle: biasedAngle,\n            targetRadius: newRadius,\n            angle: newAngle,\n            radius: newRadius,\n            currentColor: rgbToString(lerpedColor),\n            color: rgbToString(lerpedColor)\n          };\n        }\n        return {\n          ...blob,\n          angle: newAngle,\n          radius: newRadius,\n          currentColor: rgbToString(lerpedColor),\n          color: rgbToString(lerpedColor)\n        };\n      }));\n      if (running) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    }\n    animationFrameRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n    };\n  }, [targetPointerColor, tgX, tgY]);\n\n  // Global mousemove handler for robust tracking\n  useEffect(() => {\n    function handleMouseMove(event) {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const relativeX = event.clientX - rect.left;\n      const relativeY = event.clientY - rect.top;\n      setTgX(relativeX);\n      setTgY(relativeY);\n      // Update target color only\n      const contrastingColor = selectContrastingColor(relativeX, relativeY);\n      setTargetPointerColor(contrastingColor);\n    }\n    if (interactive) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [interactive]);\n\n  // Register global background color sampling function\n  useEffect(() => {\n    window.__getBackgroundColorAt = getBackgroundColorAt;\n    return () => {\n      if (window.__getBackgroundColorAt === getBackgroundColorAt) {\n        delete window.__getBackgroundColorAt;\n      }\n    };\n  }, [getBackgroundColorAt]);\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BackgroundColorContext.Provider, {\n    value: {\n      getBackgroundColorAt\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: cn(\"h-full w-full relative overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\", containerClassName),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"defs\", {\n          children: /*#__PURE__*/_jsxDEV(\"filter\", {\n            id: \"blurMe\",\n            children: [/*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n              in: \"SourceGraphic\",\n              stdDeviation: \"10\",\n              result: \"blur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n              in: \"blur\",\n              mode: \"matrix\",\n              values: \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\",\n              result: \"goo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n              in: \"SourceGraphic\",\n              in2: \"goo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"gradients-container h-full w-full blur-lg\", isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] left-[5%] [transform-origin:top_left] animate-first opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] right-[5%] [transform-origin:top_right] animate-second opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] left-[5%] [transform-origin:bottom_left] animate-third opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] right-[5%] [transform-origin:bottom_right] animate-fourth opacity-70\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[50%] left-[50%] [transform-origin:center_center] animate-fifth opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[2%] left-[10%] [transform-origin:top_left] animate-first opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[1%] right-[15%] [transform-origin:top_right] animate-second opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[3%] left-[50%] [transform-origin:top_center] animate-third opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[0%] left-[30%] [transform-origin:top_left] animate-fourth opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[2%] left-[10%] [transform-origin:bottom_left] animate-third opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[1%] right-[15%] [transform-origin:bottom_right] animate-fourth opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[3%] left-[50%] [transform-origin:bottom_center] animate-fifth opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[0%] left-[30%] [transform-origin:bottom_left] animate-first opacity-100\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.5)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[40%] left-[5%] [transform-origin:left_center] animate-fifth opacity-70\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.5)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[35%] right-[5%] [transform-origin:right_center] animate-first opacity-70\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this), interactive && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: blobs.map(blob => {\n            // Calculate offset from swarm center using polar coordinates\n            const offsetX = Math.cos(blob.angle) * blob.radius;\n            const offsetY = Math.sin(blob.angle) * blob.radius;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                background: `radial-gradient(circle at center, rgba(${blob.currentColor}, 0.6) 0%, rgba(${blob.currentColor}, 0.4) 30%, rgba(${blob.currentColor}, 0) 100%)`,\n                mixBlendMode: blendingValue,\n                position: 'absolute',\n                width: `${blob.size * 100}%`,\n                height: `${blob.size * 100}%`,\n                top: `calc(${swarm.y + offsetY}px - ${blob.size * 50}%)`,\n                left: `calc(${swarm.x + offsetX}px - ${blob.size * 50}%)`,\n                opacity: 0.8,\n                pointerEvents: 'none',\n                transition: 'none',\n                filter: 'blur(48px)'\n              }\n            }, blob.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), debugSamplePoints && debugSamplePoints.length > 0 && debugSamplePoints.map((pt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          left: pt.x - 4,\n          top: pt.y - 4,\n          width: 8,\n          height: 8,\n          background: 'red',\n          borderRadius: '50%',\n          zIndex: 100,\n          pointerEvents: 'none'\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 454,\n    columnNumber: 5\n  }, this);\n};\n_s(BackgroundGradientAnimation, \"8kWonuX7Y1RSeEn7uqOAHd6pe/E=\");\n_c = BackgroundGradientAnimation;\nvar _c;\n$RefreshReg$(_c, \"BackgroundGradientAnimation\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","useState","createContext","cn","jsxDEV","_jsxDEV","Fragment","_Fragment","BackgroundColorContext","undefined","BackgroundGradientAnimation","gradientBackgroundStart","gradientBackgroundEnd","firstColor","secondColor","thirdColor","fourthColor","fifthColor","pointerColor","size","blendingValue","children","className","interactive","containerClassName","debugSamplePoints","containerRef","curX","setCurX","curY","setCurY","tgX","setTgX","tgY","setTgY","isDarkMode","setIsDarkMode","dynamicPointerColor","setDynamicPointerColor","targetPointerColor","setTargetPointerColor","animationFrameRef","BLOB_RADIUS_MIN","BLOB_RADIUS_MAX","BLOB_COUNT","blobs","setBlobs","Array","from","length","_","i","id","angle","Math","random","PI","radius","targetAngle","targetRadius","currentColor","color","speed","colorLerp","swarm","setSwarm","x","y","colorDistance","color1","color2","rgb1","split","map","c","parseInt","trim","rgb2","sqrt","pow","blendColors","weight","blended","c1","round","join","selectContrastingColor","mouseX","mouseY","colors","containerWidth","window","innerWidth","containerHeight","innerHeight","normalizedX","normalizedY","regions","closestRegion","minDistance","Infinity","forEach","region","distance","mostContrastingColor","maxContrast","contrast","influenceRadius","distanceFromClosest","influenceStrength","max","smoothInfluence","neutralColor","getBackgroundColorAt","checkDarkMode","document","documentElement","classList","contains","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","bgStart","bgEnd","first","second","third","fourth","fifth","pointer","body","style","setProperty","running","animate","prev","requestAnimationFrame","parseRGB","rgbToString","rgb","lerpColors","to","t","every","v","abs","lerped","prevBlobs","blob","newAngle","newRadius","blobX","cos","blobY","sin","blobTargetColor","lerpedColor","bgBlobs","swarmNormX","swarmNormY","nearestBlob","minDist","blobPos","dist","hypot","dx","dy","blobAngle","atan2","randomAngle","bias","min","biasedAngle","current","cancelAnimationFrame","handleMouseMove","event","rect","getBoundingClientRect","relativeX","clientX","left","relativeY","clientY","top","contrastingColor","addEventListener","removeEventListener","__getBackgroundColorAt","isSafari","setIsSafari","test","navigator","userAgent","Provider","value","ref","in","stdDeviation","result","fileName","lineNumber","columnNumber","mode","values","in2","offsetX","offsetY","background","mixBlendMode","position","width","height","opacity","pointerEvents","transition","filter","pt","borderRadius","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Portfolio/src/ui/background-gradient-animation.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef, useState, createContext } from \"react\";\nimport { cn } from \"../lib/utils\";\n\n// Context for background color sampling\nexport const BackgroundColorContext = createContext<{ getBackgroundColorAt: (x: number, y: number) => string } | undefined>(undefined);\n\n// Add prop for debug sample points\ninterface DebugSamplePoint { x: number; y: number; }\n\ntype BackgroundGradientAnimationProps = {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n  debugSamplePoints?: DebugSamplePoint[];\n};\n\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n  debugSamplePoints,\n}: BackgroundGradientAnimationProps) => {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dynamicPointerColor, setDynamicPointerColor] = useState(pointerColor);\n  const [targetPointerColor, setTargetPointerColor] = useState(pointerColor);\n  const animationFrameRef = useRef<number | null>(null);\n\n  // Multiple animated blobs for the mouse gradient\n  const BLOB_RADIUS_MIN = 48; // px (was 32)\n  const BLOB_RADIUS_MAX = 112; // px (was 64)\n  const BLOB_COUNT = 8;\n  const [blobs, setBlobs] = useState(() => \n    Array.from({ length: BLOB_COUNT }, (_, i) => ({\n      id: i,\n      angle: Math.random() * Math.PI * 2,\n      radius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n      targetAngle: Math.random() * Math.PI * 2,\n      targetRadius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n      currentColor: pointerColor, // Each blob's own color\n      color: pointerColor, // For backward compatibility\n      size: 0.10, // 10% for all blobs\n      speed: 0.01 + Math.random() * 0.01, // Slower\n      colorLerp: 0.02 + Math.random() * 0.02, // Each blob gets a lerp factor between 0.02 and 0.04\n    }))\n  );\n\n  // Swarm center inertia state\n  const [swarm, setSwarm] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  // Function to calculate color distance (RGB Euclidean distance)\n  const colorDistance = (color1: string, color2: string): number => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    return Math.sqrt(\n      Math.pow(rgb1[0] - rgb2[0], 2) + \n      Math.pow(rgb1[1] - rgb2[1], 2) + \n      Math.pow(rgb1[2] - rgb2[2], 2)\n    );\n  };\n\n  // Function to blend colors based on RGB values\n  const blendColors = (color1: string, color2: string, weight: number): string => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    \n    const blended = rgb1.map((c1, i) => \n      Math.round(c1 * (1 - weight) + rgb2[i] * weight)\n    );\n    \n    return blended.join(', ');\n  };\n\n  // Function to get smooth contrasting color based on mouse position\n  const selectContrastingColor = (mouseX: number, mouseY: number) => {\n    const colors = isDarkMode ? [\n      \"37, 99, 235\",   // first\n      \"126, 34, 206\",  // second\n      \"6, 182, 212\",   // third\n      \"190, 24, 93\",   // fourth\n      \"21, 128, 61\"    // fifth\n    ] : [\n      firstColor,\n      secondColor,\n      thirdColor,\n      fourthColor,\n      fifthColor\n    ];\n\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    \n    // Normalize mouse position to 0-1 range\n    const normalizedX = mouseX / containerWidth;\n    const normalizedY = mouseY / containerHeight;\n    \n    // Define gradient regions with their positions and colors\n    const regions = [\n      { x: 0.2, y: 0.1, color: colors[0] },      // Top-left\n      { x: 0.8, y: 0.1, color: colors[1] },      // Top-right\n      { x: 0.5, y: 0.5, color: colors[2] },      // Center\n      { x: 0.2, y: 0.8, color: colors[3] },      // Bottom-left\n      { x: 0.8, y: 0.8, color: colors[4] },      // Bottom-right\n    ];\n\n    // Find the closest region to determine the base contrasting color\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    \n    regions.forEach(region => {\n      const distance = Math.sqrt(\n        Math.pow(normalizedX - region.x, 2) + \n        Math.pow(normalizedY - region.y, 2)\n      );\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n\n    // Find the most contrasting color to the closest region\n    let mostContrastingColor = colors[0];\n    let maxContrast = 0;\n\n    colors.forEach(color => {\n      const contrast = colorDistance(closestRegion.color, color);\n      if (contrast > maxContrast) {\n        maxContrast = contrast;\n        mostContrastingColor = color;\n      }\n    });\n\n    // Calculate smooth transition based on distance from closest region\n    // Use a much larger influence radius for smoother, longer transitions\n    const influenceRadius = 8.0; // 800% of screen size (very large/global reach)\n    const distanceFromClosest = Math.sqrt(\n      Math.pow(normalizedX - closestRegion.x, 2) + \n      Math.pow(normalizedY - closestRegion.y, 2)\n    );\n    \n    // Create smooth falloff - closer to region = stronger contrasting effect\n    const influenceStrength = Math.max(0, 1 - (distanceFromClosest / influenceRadius));\n    \n    // Use a softer curve for the transition\n    const smoothInfluence = Math.pow(influenceStrength, 1.1);\n    \n    // Blend between neutral color and contrasting color based on influence\n    const neutralColor = isDarkMode ? \"37, 99, 235\" : firstColor;\n    return blendColors(neutralColor, mostContrastingColor, smoothInfluence * 0.7);\n  };\n\n  // Function to get the background color at a given (x, y) coordinate (in px, relative to window)\n  // This is a simplified version: returns the closest region's color (could be improved for gradients)\n  const getBackgroundColorAt = (x: number, y: number) => {\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    const normalizedX = x / containerWidth;\n    const normalizedY = y / containerHeight;\n    const colors = isDarkMode ? [\n      \"37, 99, 235\",\n      \"126, 34, 206\",\n      \"6, 182, 212\",\n      \"190, 24, 93\",\n      \"21, 128, 61\"\n    ] : [\n      firstColor,\n      secondColor,\n      thirdColor,\n      fourthColor,\n      fifthColor\n    ];\n    const regions = [\n      { x: 0.2, y: 0.1, color: colors[0] },\n      { x: 0.8, y: 0.1, color: colors[1] },\n      { x: 0.5, y: 0.5, color: colors[2] },\n      { x: 0.2, y: 0.8, color: colors[3] },\n      { x: 0.8, y: 0.8, color: colors[4] },\n    ];\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    regions.forEach(region => {\n      const distance = Math.sqrt(\n        Math.pow(normalizedX - region.x, 2) +\n        Math.pow(normalizedY - region.y, 2)\n      );\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n    return `rgb(${closestRegion.color})`;\n  };\n\n  // Detect dark mode\n  useEffect(() => {\n    const checkDarkMode = () => {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    };\n    \n    checkDarkMode();\n    const observer = new MutationObserver(checkDarkMode);\n    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });\n    \n    return () => observer.disconnect();\n  }, []);\n\n  // Set colors based on theme\n  useEffect(() => {\n    const colors = isDarkMode ? {\n      bgStart: \"rgb(15, 23, 42)\",\n      bgEnd: \"rgb(2, 6, 23)\",\n      first: \"37, 99, 235\",\n      second: \"126, 34, 206\",\n      third: \"6, 182, 212\",\n      fourth: \"190, 24, 93\",\n      fifth: \"21, 128, 61\",\n      pointer: \"37, 99, 235\"\n    } : {\n      bgStart: gradientBackgroundStart,\n      bgEnd: gradientBackgroundEnd,\n      first: firstColor,\n      second: secondColor,\n      third: thirdColor,\n      fourth: fourthColor,\n      fifth: fifthColor,\n      pointer: pointerColor\n    };\n\n    document.body.style.setProperty(\"--gradient-background-start\", colors.bgStart);\n    document.body.style.setProperty(\"--gradient-background-end\", colors.bgEnd);\n    document.body.style.setProperty(\"--first-color\", colors.first);\n    document.body.style.setProperty(\"--second-color\", colors.second);\n    document.body.style.setProperty(\"--third-color\", colors.third);\n    document.body.style.setProperty(\"--fourth-color\", colors.fourth);\n    document.body.style.setProperty(\"--fifth-color\", colors.fifth);\n    document.body.style.setProperty(\"--pointer-color\", colors.pointer);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, [isDarkMode, gradientBackgroundStart, gradientBackgroundEnd, firstColor, secondColor, thirdColor, fourthColor, fifthColor, pointerColor, size, blendingValue]);\n\n  // Animation loop for smooth mouse tracking (fixes infinite loop)\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setCurX(prev => prev + (tgX - prev) / 20);\n      setCurY(prev => prev + (tgY - prev) / 20);\n      if (running) requestAnimationFrame(animate);\n    }\n    animate();\n    return () => { running = false; };\n  }, [tgX, tgY]);\n\n  // Helper: parse rgb string to array\n  const parseRGB = (color: string): [number, number, number] => {\n    return color.split(',').map(c => parseInt(c.trim(), 10)) as [number, number, number];\n  };\n  // Helper: rgb array to string\n  const rgbToString = (rgb: [number, number, number]) => `${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n  // Helper: lerp between two rgb arrays\n  const lerpColors = (from: [number, number, number], to: [number, number, number], t: number): [number, number, number] => {\n    return [\n      Math.round(from[0] + (to[0] - from[0]) * t),\n      Math.round(from[1] + (to[1] - from[1]) * t),\n      Math.round(from[2] + (to[2] - from[2]) * t),\n    ];\n  };\n\n  // Animation loop for smooth color interpolation\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setDynamicPointerColor(prev => {\n        const from = parseRGB(prev);\n        const to = parseRGB(targetPointerColor);\n        if (from.every((v, i) => Math.abs(v - to[i]) < 2)) {\n          return rgbToString(to);\n        }\n        const lerped = lerpColors(from, to, 0.01); // Slower, smoother\n        return rgbToString(lerped);\n      });\n\n      // Swarm inertia parameters\n      setSwarm(prev => {\n        return { x: tgX, y: tgY };\n      });\n\n      // Animate blob positions (no inertia, just orbit around swarm center)\n      setBlobs(prevBlobs =>\n        prevBlobs.map(blob => {\n          // Lerp angle and radius\n          let newAngle = blob.angle + (blob.targetAngle - blob.angle) * blob.speed;\n          let newRadius = blob.radius + (blob.targetRadius - blob.radius) * blob.speed;\n          // Lerp color toward its own color-aware target\n          // Calculate the blob's current screen position\n          const blobX = swarm.x + Math.cos(blob.angle) * blob.radius;\n          const blobY = swarm.y + Math.sin(blob.angle) * blob.radius;\n          // Use selectContrastingColor with the blob's position\n          const blobTargetColor = selectContrastingColor(blobX, blobY);\n          const from = parseRGB(blob.currentColor);\n          const to = parseRGB(blobTargetColor);\n          const lerpedColor = lerpColors(from, to, blob.colorLerp); // Each blob has its own color transition speed\n          // If close to target, pick new random target\n          if (Math.abs(newAngle - blob.targetAngle) < 0.05 && Math.abs(newRadius - blob.targetRadius) < 2) {\n            // Find the nearest actual background gradient blob position\n            const bgBlobs = [\n              { x: 0.05, y: 0.05 }, // top-[5%] left-[5%]\n              { x: 0.05, y: 0.95 }, // top-[5%] right-[5%]\n              { x: 0.95, y: 0.05 }, // bottom-[5%] left-[5%]\n              { x: 0.95, y: 0.95 }, // bottom-[5%] right-[5%]\n              { x: 0.5, y: 0.5 },   // top-[50%] left-[50%]\n              { x: 0.02, y: 0.10 }, // top-[2%] left-[10%]\n              { x: 0.01, y: 0.85 }, // top-[1%] right-[15%]\n              { x: 0.03, y: 0.50 }, // top-[3%] left-[50%]\n              { x: 0.00, y: 0.30 }, // top-[0%] left-[30%]\n              { x: 0.98, y: 0.10 }, // bottom-[2%] left-[10%]\n              { x: 0.99, y: 0.85 }, // bottom-[1%] right-[15%]\n              { x: 0.97, y: 0.50 }, // bottom-[3%] left-[50%]\n              { x: 1.00, y: 0.30 }, // bottom-[0%] left-[30%]\n              { x: 0.40, y: 0.05 }, // top-[40%] left-[5%]\n              { x: 0.35, y: 0.95 }, // top-[35%] right-[5%]\n            ];\n            const containerWidth = window.innerWidth;\n            const containerHeight = window.innerHeight;\n            const swarmNormX = swarm.x / containerWidth;\n            const swarmNormY = swarm.y / containerHeight;\n            let nearestBlob = bgBlobs[0];\n            let minDist = Infinity;\n            for (const blobPos of bgBlobs) {\n              const dist = Math.hypot(blobPos.x - swarmNormX, blobPos.y - swarmNormY);\n              if (dist < minDist) {\n                minDist = dist;\n                nearestBlob = blobPos;\n              }\n            }\n            // Angle from swarm center to nearest background blob\n            const dx = (nearestBlob.x * containerWidth) - swarm.x;\n            const dy = (nearestBlob.y * containerHeight) - swarm.y;\n            const blobAngle = Math.atan2(dy, dx);\n            // Pick a random angle, then bias it toward blobAngle\n            let randomAngle = Math.random() * Math.PI * 2;\n            // Bias strength depends on distance: closer = stronger bias, farther = weaker bias\n            // Use a smoothstep curve for bias: bias = max(0.15, min(0.5, 0.5 - minDist * 0.4))\n            // (so bias is 0.5 when on top of blob, 0.15 when far away)\n            let bias = 0.5 - Math.min(minDist, 1) * 0.4;\n            bias = Math.max(0.15, Math.min(0.5, bias));\n            let biasedAngle = randomAngle * (1 - bias) + blobAngle * bias;\n            // Normalize angle to [0, 2PI]\n            if (biasedAngle < 0) biasedAngle += Math.PI * 2;\n            if (biasedAngle > Math.PI * 2) biasedAngle -= Math.PI * 2;\n            newAngle = blob.angle;\n            newRadius = blob.radius;\n            // Allow the radius to exceed the max by up to 40% when bias is strong\n            newRadius =\n              BLOB_RADIUS_MIN +\n              Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN) +\n              (BLOB_RADIUS_MAX * 0.4 * (bias - 0.15) / (0.5 - 0.15));\n            return {\n              ...blob,\n              targetAngle: biasedAngle,\n              targetRadius: newRadius,\n              angle: newAngle,\n              radius: newRadius,\n              currentColor: rgbToString(lerpedColor),\n              color: rgbToString(lerpedColor),\n            };\n          }\n          return {\n            ...blob,\n            angle: newAngle,\n            radius: newRadius,\n            currentColor: rgbToString(lerpedColor),\n            color: rgbToString(lerpedColor),\n          };\n        })\n      );\n      if (running) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    }\n    animationFrameRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n    };\n  }, [targetPointerColor, tgX, tgY]);\n\n  // Global mousemove handler for robust tracking\n  useEffect(() => {\n    function handleMouseMove(event: MouseEvent) {\n      if (!containerRef.current) return;\n      const rect = containerRef.current.getBoundingClientRect();\n      const relativeX = event.clientX - rect.left;\n      const relativeY = event.clientY - rect.top;\n      setTgX(relativeX);\n      setTgY(relativeY);\n      // Update target color only\n      const contrastingColor = selectContrastingColor(relativeX, relativeY);\n      setTargetPointerColor(contrastingColor);\n    }\n    if (interactive) {\n      window.addEventListener('mousemove', handleMouseMove);\n    }\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [interactive]);\n\n  // Register global background color sampling function\n  useEffect(() => {\n    (window as any).__getBackgroundColorAt = getBackgroundColorAt;\n    return () => {\n      if ((window as any).__getBackgroundColorAt === getBackgroundColorAt) {\n        delete (window as any).__getBackgroundColorAt;\n      }\n    };\n  }, [getBackgroundColorAt]);\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  return (\n    <BackgroundColorContext.Provider value={{ getBackgroundColorAt }}>\n      <div\n        ref={containerRef}\n        className={cn(\n          \"h-full w-full relative overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\",\n          containerClassName\n        )}\n      >\n        <svg className=\"hidden\">\n          <defs>\n            <filter id=\"blurMe\">\n              <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n              <feColorMatrix\n                in=\"blur\"\n                mode=\"matrix\"\n                values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n                result=\"goo\"\n              />\n              <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n            </filter>\n          </defs>\n        </svg>\n        <div className={className}>{children}</div>\n        <div\n          className={cn(\n            \"gradients-container h-full w-full blur-lg\",\n            isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"\n          )}\n        >\n          {/* Evenly distributed background blobs: corners, edges, center */}\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] left-[5%] [transform-origin:top_left] animate-first opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] right-[5%] [transform-origin:top_right] animate-second opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] left-[5%] [transform-origin:bottom_left] animate-third opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] right-[5%] [transform-origin:bottom_right] animate-fourth opacity-70\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[50%] left-[50%] [transform-origin:center_center] animate-fifth opacity-100\"\n            )}\n          ></div>\n          {/* Additional gradients for better coverage - very top areas */}\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[2%] left-[10%] [transform-origin:top_left] animate-first opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[1%] right-[15%] [transform-origin:top_right] animate-second opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[3%] left-[50%] [transform-origin:top_center] animate-third opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[0%] left-[30%] [transform-origin:top_left] animate-fourth opacity-100\"\n            )}\n          ></div>\n          {/* Additional gradients for better coverage - very bottom areas */}\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[2%] left-[10%] [transform-origin:bottom_left] animate-third opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[1%] right-[15%] [transform-origin:bottom_right] animate-fourth opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[3%] left-[50%] [transform-origin:bottom_center] animate-fifth opacity-100\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[0%] left-[30%] [transform-origin:bottom_left] animate-first opacity-100\"\n            )}\n          ></div>\n          {/* Additional gradients for better coverage - middle areas */}\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.5)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[40%] left-[5%] [transform-origin:left_center] animate-fifth opacity-70\"\n            )}\n          ></div>\n          <div\n            className={cn(\n              \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.5)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[35%] right-[5%] [transform-origin:right_center] animate-first opacity-70\"\n            )}\n          ></div>\n          {interactive && (\n            <>\n              {blobs.map((blob) => {\n                // Calculate offset from swarm center using polar coordinates\n                const offsetX = Math.cos(blob.angle) * blob.radius;\n                const offsetY = Math.sin(blob.angle) * blob.radius;\n                return (\n                  <div\n                    key={blob.id}\n                    style={{\n                      background: `radial-gradient(circle at center, rgba(${blob.currentColor}, 0.6) 0%, rgba(${blob.currentColor}, 0.4) 30%, rgba(${blob.currentColor}, 0) 100%)`,\n                      mixBlendMode: blendingValue as any,\n                      position: 'absolute',\n                      width: `${blob.size * 100}%`,\n                      height: `${blob.size * 100}%`,\n                      top: `calc(${swarm.y + offsetY}px - ${blob.size * 50}%)`,\n                      left: `calc(${swarm.x + offsetX}px - ${blob.size * 50}%)`,\n                      opacity: 0.8,\n                      pointerEvents: 'none',\n                      transition: 'none',\n                      filter: 'blur(48px)',\n                    }}\n                  />\n                );\n              })}\n            </>\n          )}\n        </div>\n        {/* Debug overlay: show red dots at sample points if provided */}\n        {debugSamplePoints && debugSamplePoints.length > 0 && debugSamplePoints.map((pt, i) => (\n          <div\n            key={i}\n            style={{\n              position: 'fixed',\n              left: pt.x - 4,\n              top: pt.y - 4,\n              width: 8,\n              height: 8,\n              background: 'red',\n              borderRadius: '50%',\n              zIndex: 100,\n              pointerEvents: 'none',\n            }}\n          />\n        ))}\n      </div>\n    </BackgroundColorContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}