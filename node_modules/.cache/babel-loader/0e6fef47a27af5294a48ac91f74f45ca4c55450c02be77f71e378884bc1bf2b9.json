{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Portfolio\\\\src\\\\ui\\\\background-gradient-animation.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { cn } from \"../lib/utils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName\n}) => {\n  _s();\n  const interactiveRef = useRef(null);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dynamicPointerColor, setDynamicPointerColor] = useState(pointerColor);\n  const [targetPointerColor, setTargetPointerColor] = useState(pointerColor);\n  const animationFrameRef = useRef(null);\n\n  // Multiple animated blobs for the mouse gradient\n  const BLOB_RADIUS_MIN = 48; // px (was 32)\n  const BLOB_RADIUS_MAX = 112; // px (was 64)\n  const BLOB_COUNT = 4;\n  const [blobs, setBlobs] = useState(() => Array.from({\n    length: BLOB_COUNT\n  }, (_, i) => ({\n    id: i,\n    angle: Math.random() * Math.PI * 2,\n    radius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n    targetAngle: Math.random() * Math.PI * 2,\n    targetRadius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n    currentColor: pointerColor,\n    // Each blob's own color\n    color: pointerColor,\n    // For backward compatibility\n    size: 0.12 + Math.random() * 0.05,\n    // 12-17%\n    speed: 0.01 + Math.random() * 0.01 // Slower\n  })));\n\n  // Swarm center inertia state\n  const [swarm, setSwarm] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Function to calculate color distance (RGB Euclidean distance)\n  const colorDistance = (color1, color2) => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    return Math.sqrt(Math.pow(rgb1[0] - rgb2[0], 2) + Math.pow(rgb1[1] - rgb2[1], 2) + Math.pow(rgb1[2] - rgb2[2], 2));\n  };\n\n  // Function to blend colors based on RGB values\n  const blendColors = (color1, color2, weight) => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    const blended = rgb1.map((c1, i) => Math.round(c1 * (1 - weight) + rgb2[i] * weight));\n    return blended.join(', ');\n  };\n\n  // Function to get smooth contrasting color based on mouse position\n  const selectContrastingColor = (mouseX, mouseY) => {\n    const colors = isDarkMode ? [\"37, 99, 235\",\n    // first\n    \"126, 34, 206\",\n    // second\n    \"6, 182, 212\",\n    // third\n    \"190, 24, 93\",\n    // fourth\n    \"21, 128, 61\" // fifth\n    ] : [firstColor, secondColor, thirdColor, fourthColor, fifthColor];\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n\n    // Normalize mouse position to 0-1 range\n    const normalizedX = mouseX / containerWidth;\n    const normalizedY = mouseY / containerHeight;\n\n    // Define gradient regions with their positions and colors\n    const regions = [{\n      x: 0.2,\n      y: 0.1,\n      color: colors[0]\n    },\n    // Top-left\n    {\n      x: 0.8,\n      y: 0.1,\n      color: colors[1]\n    },\n    // Top-right\n    {\n      x: 0.5,\n      y: 0.5,\n      color: colors[2]\n    },\n    // Center\n    {\n      x: 0.2,\n      y: 0.8,\n      color: colors[3]\n    },\n    // Bottom-left\n    {\n      x: 0.8,\n      y: 0.8,\n      color: colors[4]\n    } // Bottom-right\n    ];\n\n    // Find the closest region to determine the base contrasting color\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    regions.forEach(region => {\n      const distance = Math.sqrt(Math.pow(normalizedX - region.x, 2) + Math.pow(normalizedY - region.y, 2));\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n\n    // Find the most contrasting color to the closest region\n    let mostContrastingColor = colors[0];\n    let maxContrast = 0;\n    colors.forEach(color => {\n      const contrast = colorDistance(closestRegion.color, color);\n      if (contrast > maxContrast) {\n        maxContrast = contrast;\n        mostContrastingColor = color;\n      }\n    });\n\n    // Calculate smooth transition based on distance from closest region\n    // Use a much larger influence radius for smoother, longer transitions\n    const influenceRadius = 8.0; // 800% of screen size (very large/global reach)\n    const distanceFromClosest = Math.sqrt(Math.pow(normalizedX - closestRegion.x, 2) + Math.pow(normalizedY - closestRegion.y, 2));\n\n    // Create smooth falloff - closer to region = stronger contrasting effect\n    const influenceStrength = Math.max(0, 1 - distanceFromClosest / influenceRadius);\n\n    // Use a softer curve for the transition\n    const smoothInfluence = Math.pow(influenceStrength, 1.1);\n\n    // Blend between neutral color and contrasting color based on influence\n    const neutralColor = isDarkMode ? \"37, 99, 235\" : firstColor;\n    return blendColors(neutralColor, mostContrastingColor, smoothInfluence * 0.7);\n  };\n\n  // Detect dark mode\n  useEffect(() => {\n    const checkDarkMode = () => {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    };\n    checkDarkMode();\n    const observer = new MutationObserver(checkDarkMode);\n    observer.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: ['class']\n    });\n    return () => observer.disconnect();\n  }, []);\n\n  // Set colors based on theme\n  useEffect(() => {\n    const colors = isDarkMode ? {\n      bgStart: \"rgb(15, 23, 42)\",\n      bgEnd: \"rgb(2, 6, 23)\",\n      first: \"37, 99, 235\",\n      second: \"126, 34, 206\",\n      third: \"6, 182, 212\",\n      fourth: \"190, 24, 93\",\n      fifth: \"21, 128, 61\",\n      pointer: \"37, 99, 235\"\n    } : {\n      bgStart: gradientBackgroundStart,\n      bgEnd: gradientBackgroundEnd,\n      first: firstColor,\n      second: secondColor,\n      third: thirdColor,\n      fourth: fourthColor,\n      fifth: fifthColor,\n      pointer: pointerColor\n    };\n    document.body.style.setProperty(\"--gradient-background-start\", colors.bgStart);\n    document.body.style.setProperty(\"--gradient-background-end\", colors.bgEnd);\n    document.body.style.setProperty(\"--first-color\", colors.first);\n    document.body.style.setProperty(\"--second-color\", colors.second);\n    document.body.style.setProperty(\"--third-color\", colors.third);\n    document.body.style.setProperty(\"--fourth-color\", colors.fourth);\n    document.body.style.setProperty(\"--fifth-color\", colors.fifth);\n    document.body.style.setProperty(\"--pointer-color\", colors.pointer);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, [isDarkMode, gradientBackgroundStart, gradientBackgroundEnd, firstColor, secondColor, thirdColor, fourthColor, fifthColor, pointerColor, size, blendingValue]);\n  useEffect(() => {\n    function move() {\n      if (!interactiveRef.current) {\n        return;\n      }\n      setCurX(curX + (tgX - curX) / 20);\n      setCurY(curY + (tgY - curY) / 20);\n      interactiveRef.current.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;\n    }\n    move();\n  }, [tgX, tgY, curX, curY]);\n\n  // Helper: parse rgb string to array\n  const parseRGB = color => {\n    return color.split(',').map(c => parseInt(c.trim(), 10));\n  };\n  // Helper: rgb array to string\n  const rgbToString = rgb => `${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n  // Helper: lerp between two rgb arrays\n  const lerpColors = (from, to, t) => {\n    return [Math.round(from[0] + (to[0] - from[0]) * t), Math.round(from[1] + (to[1] - from[1]) * t), Math.round(from[2] + (to[2] - from[2]) * t)];\n  };\n\n  // Animation loop for smooth color interpolation\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setDynamicPointerColor(prev => {\n        const from = parseRGB(prev);\n        const to = parseRGB(targetPointerColor);\n        if (from.every((v, i) => Math.abs(v - to[i]) < 2)) {\n          return rgbToString(to);\n        }\n        const lerped = lerpColors(from, to, 0.03);\n        return rgbToString(lerped);\n      });\n\n      // Swarm inertia parameters\n      setSwarm(prev => {\n        return {\n          x: tgX,\n          y: tgY\n        };\n      });\n\n      // Animate blob positions (no inertia, just orbit around swarm center)\n      setBlobs(prevBlobs => prevBlobs.map(blob => {\n        // Lerp angle and radius\n        let newAngle = blob.angle + (blob.targetAngle - blob.angle) * blob.speed;\n        let newRadius = blob.radius + (blob.targetRadius - blob.radius) * blob.speed;\n        // Lerp color toward targetPointerColor\n        const from = parseRGB(blob.currentColor);\n        const to = parseRGB(targetPointerColor);\n        const lerpedColor = lerpColors(from, to, 0.06); // Gentle color transition\n        // If close to target, pick new random target\n        if (Math.abs(newAngle - blob.targetAngle) < 0.05 && Math.abs(newRadius - blob.targetRadius) < 2) {\n          // Find the nearest actual background gradient blob position\n          const bgBlobs = [{\n            x: 0.05,\n            y: 0.05\n          },\n          // top-[5%] left-[5%]\n          {\n            x: 0.05,\n            y: 0.95\n          },\n          // top-[5%] right-[5%]\n          {\n            x: 0.95,\n            y: 0.05\n          },\n          // bottom-[5%] left-[5%]\n          {\n            x: 0.95,\n            y: 0.95\n          },\n          // bottom-[5%] right-[5%]\n          {\n            x: 0.5,\n            y: 0.5\n          },\n          // top-[50%] left-[50%]\n          {\n            x: 0.02,\n            y: 0.10\n          },\n          // top-[2%] left-[10%]\n          {\n            x: 0.01,\n            y: 0.85\n          },\n          // top-[1%] right-[15%]\n          {\n            x: 0.03,\n            y: 0.50\n          },\n          // top-[3%] left-[50%]\n          {\n            x: 0.00,\n            y: 0.30\n          },\n          // top-[0%] left-[30%]\n          {\n            x: 0.98,\n            y: 0.10\n          },\n          // bottom-[2%] left-[10%]\n          {\n            x: 0.99,\n            y: 0.85\n          },\n          // bottom-[1%] right-[15%]\n          {\n            x: 0.97,\n            y: 0.50\n          },\n          // bottom-[3%] left-[50%]\n          {\n            x: 1.00,\n            y: 0.30\n          },\n          // bottom-[0%] left-[30%]\n          {\n            x: 0.40,\n            y: 0.05\n          },\n          // top-[40%] left-[5%]\n          {\n            x: 0.35,\n            y: 0.95\n          } // top-[35%] right-[5%]\n          ];\n          const containerWidth = window.innerWidth;\n          const containerHeight = window.innerHeight;\n          const swarmNormX = swarm.x / containerWidth;\n          const swarmNormY = swarm.y / containerHeight;\n          let nearestBlob = bgBlobs[0];\n          let minDist = Infinity;\n          for (const blobPos of bgBlobs) {\n            const dist = Math.hypot(blobPos.x - swarmNormX, blobPos.y - swarmNormY);\n            if (dist < minDist) {\n              minDist = dist;\n              nearestBlob = blobPos;\n            }\n          }\n          // Angle from swarm center to nearest background blob\n          const dx = nearestBlob.x * containerWidth - swarm.x;\n          const dy = nearestBlob.y * containerHeight - swarm.y;\n          const blobAngle = Math.atan2(dy, dx);\n          // Pick a random angle, then bias it toward blobAngle\n          let randomAngle = Math.random() * Math.PI * 2;\n          // Bias strength depends on distance: closer = stronger bias, farther = weaker bias\n          // Use a smoothstep curve for bias: bias = max(0.15, min(0.5, 0.5 - minDist * 0.4))\n          // (so bias is 0.5 when on top of blob, 0.15 when far away)\n          let bias = 0.5 - Math.min(minDist, 1) * 0.4;\n          bias = Math.max(0.15, Math.min(0.5, bias));\n          let biasedAngle = randomAngle * (1 - bias) + blobAngle * bias;\n          // Normalize angle to [0, 2PI]\n          if (biasedAngle < 0) biasedAngle += Math.PI * 2;\n          if (biasedAngle > Math.PI * 2) biasedAngle -= Math.PI * 2;\n          newAngle = blob.angle;\n          newRadius = blob.radius;\n          // Allow the radius to exceed the max by up to 40% when bias is strong\n          newRadius = BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN) + BLOB_RADIUS_MAX * 0.4 * (bias - 0.15) / (0.5 - 0.15);\n          return {\n            ...blob,\n            targetAngle: biasedAngle,\n            targetRadius: newRadius,\n            angle: newAngle,\n            radius: newRadius,\n            currentColor: rgbToString(lerpedColor),\n            color: rgbToString(lerpedColor)\n          };\n        }\n        return {\n          ...blob,\n          angle: newAngle,\n          radius: newRadius,\n          currentColor: rgbToString(lerpedColor),\n          color: rgbToString(lerpedColor)\n        };\n      }));\n      if (running) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    }\n    animationFrameRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n    };\n  }, [targetPointerColor, tgX, tgY]);\n  const handleMouseMove = event => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    setTgX(event.clientX - rect.left);\n    setTgY(event.clientY - rect.top);\n    // Update target color only\n    const contrastingColor = selectContrastingColor(event.clientX, event.clientY);\n    setTargetPointerColor(contrastingColor);\n  };\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(\"h-full w-full relative overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\", containerClassName),\n    onMouseMove: interactive ? handleMouseMove : undefined,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"filter\", {\n          id: \"blurMe\",\n          children: [/*#__PURE__*/_jsxDEV(\"feGaussianBlur\", {\n            in: \"SourceGraphic\",\n            stdDeviation: \"10\",\n            result: \"blur\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n            in: \"blur\",\n            mode: \"matrix\",\n            values: \"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\",\n            result: \"goo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"feBlend\", {\n            in: \"SourceGraphic\",\n            in2: \"goo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"gradients-container h-full w-full blur-lg\", isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] left-[5%] [transform-origin:top_left] animate-first opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] right-[5%] [transform-origin:top_right] animate-second opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] left-[5%] [transform-origin:bottom_left] animate-third opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] right-[5%] [transform-origin:bottom_right] animate-fourth opacity-70\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[50%] left-[50%] [transform-origin:center_center] animate-fifth opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[2%] left-[10%] [transform-origin:top_left] animate-first opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[1%] right-[15%] [transform-origin:top_right] animate-second opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[3%] left-[50%] [transform-origin:top_center] animate-third opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[0%] left-[30%] [transform-origin:top_left] animate-fourth opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[2%] left-[10%] [transform-origin:bottom_left] animate-third opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[1%] right-[15%] [transform-origin:bottom_right] animate-fourth opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[3%] left-[50%] [transform-origin:bottom_center] animate-fifth opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[0%] left-[30%] [transform-origin:bottom_left] animate-first opacity-100\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.5)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[40%] left-[5%] [transform-origin:left_center] animate-fifth opacity-70\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cn(\"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.5)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[35%] right-[5%] [transform-origin:right_center] animate-first opacity-70\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), interactive && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: blobs.map(blob => {\n          // Calculate offset from swarm center using polar coordinates\n          const offsetX = Math.cos(blob.angle) * blob.radius;\n          const offsetY = Math.sin(blob.angle) * blob.radius;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: `radial-gradient(circle at center, rgba(${blob.currentColor}, 0.6) 0%, rgba(${blob.currentColor}, 0.4) 30%, rgba(${blob.currentColor}, 0) 100%)`,\n              mixBlendMode: blendingValue,\n              position: 'absolute',\n              width: `${blob.size * 100}%`,\n              height: `${blob.size * 100}%`,\n              top: `calc(${swarm.y + offsetY}px - ${blob.size * 50}%)`,\n              left: `calc(${swarm.x + offsetX}px - ${blob.size * 50}%)`,\n              opacity: 0.8,\n              pointerEvents: 'none',\n              transition: 'none',\n              filter: 'blur(48px)'\n            }\n          }, blob.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n};\n_s(BackgroundGradientAnimation, \"+pBkpjQoDJ96Jb6jc/0l7EqGO6Y=\");\n_c = BackgroundGradientAnimation;\nvar _c;\n$RefreshReg$(_c, \"BackgroundGradientAnimation\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useRef","useState","cn","jsxDEV","_jsxDEV","Fragment","_Fragment","BackgroundGradientAnimation","gradientBackgroundStart","gradientBackgroundEnd","firstColor","secondColor","thirdColor","fourthColor","fifthColor","pointerColor","size","blendingValue","children","className","interactive","containerClassName","interactiveRef","curX","setCurX","curY","setCurY","tgX","setTgX","tgY","setTgY","isDarkMode","setIsDarkMode","dynamicPointerColor","setDynamicPointerColor","targetPointerColor","setTargetPointerColor","animationFrameRef","BLOB_RADIUS_MIN","BLOB_RADIUS_MAX","BLOB_COUNT","blobs","setBlobs","Array","from","length","_","i","id","angle","Math","random","PI","radius","targetAngle","targetRadius","currentColor","color","speed","swarm","setSwarm","x","y","colorDistance","color1","color2","rgb1","split","map","c","parseInt","trim","rgb2","sqrt","pow","blendColors","weight","blended","c1","round","join","selectContrastingColor","mouseX","mouseY","colors","containerWidth","window","innerWidth","containerHeight","innerHeight","normalizedX","normalizedY","regions","closestRegion","minDistance","Infinity","forEach","region","distance","mostContrastingColor","maxContrast","contrast","influenceRadius","distanceFromClosest","influenceStrength","max","smoothInfluence","neutralColor","checkDarkMode","document","documentElement","classList","contains","observer","MutationObserver","observe","attributes","attributeFilter","disconnect","bgStart","bgEnd","first","second","third","fourth","fifth","pointer","body","style","setProperty","move","current","transform","parseRGB","rgbToString","rgb","lerpColors","to","t","running","animate","prev","every","v","abs","lerped","prevBlobs","blob","newAngle","newRadius","lerpedColor","bgBlobs","swarmNormX","swarmNormY","nearestBlob","minDist","blobPos","dist","hypot","dx","dy","blobAngle","atan2","randomAngle","bias","min","biasedAngle","requestAnimationFrame","cancelAnimationFrame","handleMouseMove","event","rect","currentTarget","getBoundingClientRect","clientX","left","clientY","top","contrastingColor","isSafari","setIsSafari","test","navigator","userAgent","onMouseMove","undefined","in","stdDeviation","result","fileName","lineNumber","columnNumber","mode","values","in2","offsetX","cos","offsetY","sin","background","mixBlendMode","position","width","height","opacity","pointerEvents","transition","filter","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/Portfolio/src/ui/background-gradient-animation.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { cn } from \"../lib/utils\";\n\nexport const BackgroundGradientAnimation = ({\n  gradientBackgroundStart = \"rgb(108, 0, 162)\",\n  gradientBackgroundEnd = \"rgb(0, 17, 82)\",\n  firstColor = \"18, 113, 255\",\n  secondColor = \"221, 74, 255\",\n  thirdColor = \"100, 220, 255\",\n  fourthColor = \"200, 50, 50\",\n  fifthColor = \"180, 180, 50\",\n  pointerColor = \"140, 100, 255\",\n  size = \"80%\",\n  blendingValue = \"hard-light\",\n  children,\n  className,\n  interactive = true,\n  containerClassName,\n}: {\n  gradientBackgroundStart?: string;\n  gradientBackgroundEnd?: string;\n  firstColor?: string;\n  secondColor?: string;\n  thirdColor?: string;\n  fourthColor?: string;\n  fifthColor?: string;\n  pointerColor?: string;\n  size?: string;\n  blendingValue?: string;\n  children?: React.ReactNode;\n  className?: string;\n  interactive?: boolean;\n  containerClassName?: string;\n}) => {\n  const interactiveRef = useRef<HTMLDivElement>(null);\n  const [curX, setCurX] = useState(0);\n  const [curY, setCurY] = useState(0);\n  const [tgX, setTgX] = useState(0);\n  const [tgY, setTgY] = useState(0);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [dynamicPointerColor, setDynamicPointerColor] = useState(pointerColor);\n  const [targetPointerColor, setTargetPointerColor] = useState(pointerColor);\n  const animationFrameRef = useRef<number | null>(null);\n\n  // Multiple animated blobs for the mouse gradient\n  const BLOB_RADIUS_MIN = 48; // px (was 32)\n  const BLOB_RADIUS_MAX = 112; // px (was 64)\n  const BLOB_COUNT = 4;\n  const [blobs, setBlobs] = useState(() => \n    Array.from({ length: BLOB_COUNT }, (_, i) => ({\n      id: i,\n      angle: Math.random() * Math.PI * 2,\n      radius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n      targetAngle: Math.random() * Math.PI * 2,\n      targetRadius: BLOB_RADIUS_MIN + Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN),\n      currentColor: pointerColor, // Each blob's own color\n      color: pointerColor, // For backward compatibility\n      size: 0.12 + Math.random() * 0.05, // 12-17%\n      speed: 0.01 + Math.random() * 0.01, // Slower\n    }))\n  );\n\n  // Swarm center inertia state\n  const [swarm, setSwarm] = useState({\n    x: 0,\n    y: 0,\n  });\n\n  // Function to calculate color distance (RGB Euclidean distance)\n  const colorDistance = (color1: string, color2: string): number => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    return Math.sqrt(\n      Math.pow(rgb1[0] - rgb2[0], 2) + \n      Math.pow(rgb1[1] - rgb2[1], 2) + \n      Math.pow(rgb1[2] - rgb2[2], 2)\n    );\n  };\n\n  // Function to blend colors based on RGB values\n  const blendColors = (color1: string, color2: string, weight: number): string => {\n    const rgb1 = color1.split(',').map(c => parseInt(c.trim()));\n    const rgb2 = color2.split(',').map(c => parseInt(c.trim()));\n    \n    const blended = rgb1.map((c1, i) => \n      Math.round(c1 * (1 - weight) + rgb2[i] * weight)\n    );\n    \n    return blended.join(', ');\n  };\n\n  // Function to get smooth contrasting color based on mouse position\n  const selectContrastingColor = (mouseX: number, mouseY: number) => {\n    const colors = isDarkMode ? [\n      \"37, 99, 235\",   // first\n      \"126, 34, 206\",  // second\n      \"6, 182, 212\",   // third\n      \"190, 24, 93\",   // fourth\n      \"21, 128, 61\"    // fifth\n    ] : [\n      firstColor,\n      secondColor,\n      thirdColor,\n      fourthColor,\n      fifthColor\n    ];\n\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    \n    // Normalize mouse position to 0-1 range\n    const normalizedX = mouseX / containerWidth;\n    const normalizedY = mouseY / containerHeight;\n    \n    // Define gradient regions with their positions and colors\n    const regions = [\n      { x: 0.2, y: 0.1, color: colors[0] },      // Top-left\n      { x: 0.8, y: 0.1, color: colors[1] },      // Top-right\n      { x: 0.5, y: 0.5, color: colors[2] },      // Center\n      { x: 0.2, y: 0.8, color: colors[3] },      // Bottom-left\n      { x: 0.8, y: 0.8, color: colors[4] },      // Bottom-right\n    ];\n\n    // Find the closest region to determine the base contrasting color\n    let closestRegion = regions[0];\n    let minDistance = Infinity;\n    \n    regions.forEach(region => {\n      const distance = Math.sqrt(\n        Math.pow(normalizedX - region.x, 2) + \n        Math.pow(normalizedY - region.y, 2)\n      );\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestRegion = region;\n      }\n    });\n\n    // Find the most contrasting color to the closest region\n    let mostContrastingColor = colors[0];\n    let maxContrast = 0;\n\n    colors.forEach(color => {\n      const contrast = colorDistance(closestRegion.color, color);\n      if (contrast > maxContrast) {\n        maxContrast = contrast;\n        mostContrastingColor = color;\n      }\n    });\n\n    // Calculate smooth transition based on distance from closest region\n    // Use a much larger influence radius for smoother, longer transitions\n    const influenceRadius = 8.0; // 800% of screen size (very large/global reach)\n    const distanceFromClosest = Math.sqrt(\n      Math.pow(normalizedX - closestRegion.x, 2) + \n      Math.pow(normalizedY - closestRegion.y, 2)\n    );\n    \n    // Create smooth falloff - closer to region = stronger contrasting effect\n    const influenceStrength = Math.max(0, 1 - (distanceFromClosest / influenceRadius));\n    \n    // Use a softer curve for the transition\n    const smoothInfluence = Math.pow(influenceStrength, 1.1);\n    \n    // Blend between neutral color and contrasting color based on influence\n    const neutralColor = isDarkMode ? \"37, 99, 235\" : firstColor;\n    return blendColors(neutralColor, mostContrastingColor, smoothInfluence * 0.7);\n  };\n\n  // Detect dark mode\n  useEffect(() => {\n    const checkDarkMode = () => {\n      setIsDarkMode(document.documentElement.classList.contains('dark'));\n    };\n    \n    checkDarkMode();\n    const observer = new MutationObserver(checkDarkMode);\n    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });\n    \n    return () => observer.disconnect();\n  }, []);\n\n  // Set colors based on theme\n  useEffect(() => {\n    const colors = isDarkMode ? {\n      bgStart: \"rgb(15, 23, 42)\",\n      bgEnd: \"rgb(2, 6, 23)\",\n      first: \"37, 99, 235\",\n      second: \"126, 34, 206\",\n      third: \"6, 182, 212\",\n      fourth: \"190, 24, 93\",\n      fifth: \"21, 128, 61\",\n      pointer: \"37, 99, 235\"\n    } : {\n      bgStart: gradientBackgroundStart,\n      bgEnd: gradientBackgroundEnd,\n      first: firstColor,\n      second: secondColor,\n      third: thirdColor,\n      fourth: fourthColor,\n      fifth: fifthColor,\n      pointer: pointerColor\n    };\n\n    document.body.style.setProperty(\"--gradient-background-start\", colors.bgStart);\n    document.body.style.setProperty(\"--gradient-background-end\", colors.bgEnd);\n    document.body.style.setProperty(\"--first-color\", colors.first);\n    document.body.style.setProperty(\"--second-color\", colors.second);\n    document.body.style.setProperty(\"--third-color\", colors.third);\n    document.body.style.setProperty(\"--fourth-color\", colors.fourth);\n    document.body.style.setProperty(\"--fifth-color\", colors.fifth);\n    document.body.style.setProperty(\"--pointer-color\", colors.pointer);\n    document.body.style.setProperty(\"--size\", size);\n    document.body.style.setProperty(\"--blending-value\", blendingValue);\n  }, [isDarkMode, gradientBackgroundStart, gradientBackgroundEnd, firstColor, secondColor, thirdColor, fourthColor, fifthColor, pointerColor, size, blendingValue]);\n\n  useEffect(() => {\n    function move() {\n      if (!interactiveRef.current) {\n        return;\n      }\n      setCurX(curX + (tgX - curX) / 20);\n      setCurY(curY + (tgY - curY) / 20);\n      interactiveRef.current.style.transform = `translate(${Math.round(\n        curX\n      )}px, ${Math.round(curY)}px)`;\n    }\n    move();\n  }, [tgX, tgY, curX, curY]);\n\n  // Helper: parse rgb string to array\n  const parseRGB = (color: string): [number, number, number] => {\n    return color.split(',').map(c => parseInt(c.trim(), 10)) as [number, number, number];\n  };\n  // Helper: rgb array to string\n  const rgbToString = (rgb: [number, number, number]) => `${rgb[0]}, ${rgb[1]}, ${rgb[2]}`;\n  // Helper: lerp between two rgb arrays\n  const lerpColors = (from: [number, number, number], to: [number, number, number], t: number): [number, number, number] => {\n    return [\n      Math.round(from[0] + (to[0] - from[0]) * t),\n      Math.round(from[1] + (to[1] - from[1]) * t),\n      Math.round(from[2] + (to[2] - from[2]) * t),\n    ];\n  };\n\n  // Animation loop for smooth color interpolation\n  useEffect(() => {\n    let running = true;\n    function animate() {\n      setDynamicPointerColor(prev => {\n        const from = parseRGB(prev);\n        const to = parseRGB(targetPointerColor);\n        if (from.every((v, i) => Math.abs(v - to[i]) < 2)) {\n          return rgbToString(to);\n        }\n        const lerped = lerpColors(from, to, 0.03);\n        return rgbToString(lerped);\n      });\n\n      // Swarm inertia parameters\n      setSwarm(prev => {\n        return { x: tgX, y: tgY };\n      });\n\n      // Animate blob positions (no inertia, just orbit around swarm center)\n      setBlobs(prevBlobs =>\n        prevBlobs.map(blob => {\n          // Lerp angle and radius\n          let newAngle = blob.angle + (blob.targetAngle - blob.angle) * blob.speed;\n          let newRadius = blob.radius + (blob.targetRadius - blob.radius) * blob.speed;\n          // Lerp color toward targetPointerColor\n          const from = parseRGB(blob.currentColor);\n          const to = parseRGB(targetPointerColor);\n          const lerpedColor = lerpColors(from, to, 0.06); // Gentle color transition\n          // If close to target, pick new random target\n          if (Math.abs(newAngle - blob.targetAngle) < 0.05 && Math.abs(newRadius - blob.targetRadius) < 2) {\n            // Find the nearest actual background gradient blob position\n            const bgBlobs = [\n              { x: 0.05, y: 0.05 }, // top-[5%] left-[5%]\n              { x: 0.05, y: 0.95 }, // top-[5%] right-[5%]\n              { x: 0.95, y: 0.05 }, // bottom-[5%] left-[5%]\n              { x: 0.95, y: 0.95 }, // bottom-[5%] right-[5%]\n              { x: 0.5, y: 0.5 },   // top-[50%] left-[50%]\n              { x: 0.02, y: 0.10 }, // top-[2%] left-[10%]\n              { x: 0.01, y: 0.85 }, // top-[1%] right-[15%]\n              { x: 0.03, y: 0.50 }, // top-[3%] left-[50%]\n              { x: 0.00, y: 0.30 }, // top-[0%] left-[30%]\n              { x: 0.98, y: 0.10 }, // bottom-[2%] left-[10%]\n              { x: 0.99, y: 0.85 }, // bottom-[1%] right-[15%]\n              { x: 0.97, y: 0.50 }, // bottom-[3%] left-[50%]\n              { x: 1.00, y: 0.30 }, // bottom-[0%] left-[30%]\n              { x: 0.40, y: 0.05 }, // top-[40%] left-[5%]\n              { x: 0.35, y: 0.95 }, // top-[35%] right-[5%]\n            ];\n            const containerWidth = window.innerWidth;\n            const containerHeight = window.innerHeight;\n            const swarmNormX = swarm.x / containerWidth;\n            const swarmNormY = swarm.y / containerHeight;\n            let nearestBlob = bgBlobs[0];\n            let minDist = Infinity;\n            for (const blobPos of bgBlobs) {\n              const dist = Math.hypot(blobPos.x - swarmNormX, blobPos.y - swarmNormY);\n              if (dist < minDist) {\n                minDist = dist;\n                nearestBlob = blobPos;\n              }\n            }\n            // Angle from swarm center to nearest background blob\n            const dx = (nearestBlob.x * containerWidth) - swarm.x;\n            const dy = (nearestBlob.y * containerHeight) - swarm.y;\n            const blobAngle = Math.atan2(dy, dx);\n            // Pick a random angle, then bias it toward blobAngle\n            let randomAngle = Math.random() * Math.PI * 2;\n            // Bias strength depends on distance: closer = stronger bias, farther = weaker bias\n            // Use a smoothstep curve for bias: bias = max(0.15, min(0.5, 0.5 - minDist * 0.4))\n            // (so bias is 0.5 when on top of blob, 0.15 when far away)\n            let bias = 0.5 - Math.min(minDist, 1) * 0.4;\n            bias = Math.max(0.15, Math.min(0.5, bias));\n            let biasedAngle = randomAngle * (1 - bias) + blobAngle * bias;\n            // Normalize angle to [0, 2PI]\n            if (biasedAngle < 0) biasedAngle += Math.PI * 2;\n            if (biasedAngle > Math.PI * 2) biasedAngle -= Math.PI * 2;\n            newAngle = blob.angle;\n            newRadius = blob.radius;\n            // Allow the radius to exceed the max by up to 40% when bias is strong\n            newRadius =\n              BLOB_RADIUS_MIN +\n              Math.random() * (BLOB_RADIUS_MAX - BLOB_RADIUS_MIN) +\n              (BLOB_RADIUS_MAX * 0.4 * (bias - 0.15) / (0.5 - 0.15));\n            return {\n              ...blob,\n              targetAngle: biasedAngle,\n              targetRadius: newRadius,\n              angle: newAngle,\n              radius: newRadius,\n              currentColor: rgbToString(lerpedColor),\n              color: rgbToString(lerpedColor),\n            };\n          }\n          return {\n            ...blob,\n            angle: newAngle,\n            radius: newRadius,\n            currentColor: rgbToString(lerpedColor),\n            color: rgbToString(lerpedColor),\n          };\n        })\n      );\n      if (running) {\n        animationFrameRef.current = requestAnimationFrame(animate);\n      }\n    }\n    animationFrameRef.current = requestAnimationFrame(animate);\n    return () => {\n      running = false;\n      if (animationFrameRef.current) cancelAnimationFrame(animationFrameRef.current);\n    };\n  }, [targetPointerColor, tgX, tgY]);\n\n  const handleMouseMove = (event: React.MouseEvent<HTMLDivElement>) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    setTgX(event.clientX - rect.left);\n    setTgY(event.clientY - rect.top);\n    // Update target color only\n    const contrastingColor = selectContrastingColor(event.clientX, event.clientY);\n    setTargetPointerColor(contrastingColor);\n  };\n\n  const [isSafari, setIsSafari] = useState(false);\n  useEffect(() => {\n    setIsSafari(/^((?!chrome|android).)*safari/i.test(navigator.userAgent));\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        \"h-full w-full relative overflow-hidden top-0 left-0 bg-[linear-gradient(40deg,var(--gradient-background-start),var(--gradient-background-end))]\",\n        containerClassName\n      )}\n      onMouseMove={interactive ? handleMouseMove : undefined}\n    >\n      <svg className=\"hidden\">\n        <defs>\n          <filter id=\"blurMe\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8\"\n              result=\"goo\"\n            />\n            <feBlend in=\"SourceGraphic\" in2=\"goo\" />\n          </filter>\n        </defs>\n      </svg>\n      <div className={className}>{children}</div>\n      <div\n        className={cn(\n          \"gradients-container h-full w-full blur-lg\",\n          isSafari ? \"blur-2xl\" : \"[filter:url(#blurMe)_blur(40px)]\"\n        )}\n      >\n        {/* Evenly distributed background blobs: corners, edges, center */}\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_var(--first-color)_0,_var(--first-color)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] left-[5%] [transform-origin:top_left] animate-first opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[5%] right-[5%] [transform-origin:top_right] animate-second opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] left-[5%] [transform-origin:bottom_left] animate-third opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[5%] right-[5%] [transform-origin:bottom_right] animate-fourth opacity-70\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[50%] left-[50%] [transform-origin:center_center] animate-fifth opacity-100\"\n          )}\n        ></div>\n        {/* Additional gradients for better coverage - very top areas */}\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[2%] left-[10%] [transform-origin:top_left] animate-first opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--second-color),_0.8)_0,_rgba(var(--second-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[1%] right-[15%] [transform-origin:top_right] animate-second opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[3%] left-[50%] [transform-origin:top_center] animate-third opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[0%] left-[30%] [transform-origin:top_left] animate-fourth opacity-100\"\n          )}\n        ></div>\n        {/* Additional gradients for better coverage - very bottom areas */}\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--third-color),_0.8)_0,_rgba(var(--third-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[2%] left-[10%] [transform-origin:bottom_left] animate-third opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fourth-color),_0.8)_0,_rgba(var(--fourth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[1%] right-[15%] [transform-origin:bottom_right] animate-fourth opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.8)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[3%] left-[50%] [transform-origin:bottom_center] animate-fifth opacity-100\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.8)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] bottom-[0%] left-[30%] [transform-origin:bottom_left] animate-first opacity-100\"\n          )}\n        ></div>\n        {/* Additional gradients for better coverage - middle areas */}\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--fifth-color),_0.5)_0,_rgba(var(--fifth-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[40%] left-[5%] [transform-origin:left_center] animate-fifth opacity-70\"\n          )}\n        ></div>\n        <div\n          className={cn(\n            \"absolute [background:radial-gradient(circle_at_center,_rgba(var(--first-color),_0.5)_0,_rgba(var(--first-color),_0)_50%)_no-repeat] [mix-blend-mode:var(--blending-value)] w-[var(--size)] h-[var(--size)] top-[35%] right-[5%] [transform-origin:right_center] animate-first opacity-70\"\n          )}\n        ></div>\n        {interactive && (\n          <>\n            {blobs.map((blob) => {\n              // Calculate offset from swarm center using polar coordinates\n              const offsetX = Math.cos(blob.angle) * blob.radius;\n              const offsetY = Math.sin(blob.angle) * blob.radius;\n              return (\n                <div\n                  key={blob.id}\n                  style={{\n                    background: `radial-gradient(circle at center, rgba(${blob.currentColor}, 0.6) 0%, rgba(${blob.currentColor}, 0.4) 30%, rgba(${blob.currentColor}, 0) 100%)`,\n                    mixBlendMode: blendingValue as any,\n                    position: 'absolute',\n                    width: `${blob.size * 100}%`,\n                    height: `${blob.size * 100}%`,\n                    top: `calc(${swarm.y + offsetY}px - ${blob.size * 50}%)`,\n                    left: `calc(${swarm.x + offsetX}px - ${blob.size * 50}%)`,\n                    opacity: 0.8,\n                    pointerEvents: 'none',\n                    transition: 'none',\n                    filter: 'blur(48px)',\n                  }}\n                />\n              );\n            })}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}